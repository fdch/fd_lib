#N canvas 381 27 552 488 12;
#N canvas 0 22 450 278 (subpatch) 0;
#X array gauss 100 float 3;
#A 0 0.00673795 0.0082133 0.00997174 0.0120583 0.0145233 0.0174224
0.0208167 0.024773 0.0293636 0.0346659 0.0407622 0.0477393 0.0556875
0.0646996 0.0748701 0.0862936 0.0990629 0.113268 0.128993 0.146314
0.165299 0.186002 0.208462 0.232701 0.258722 0.286505 0.316004 0.347149
0.379842 0.413954 0.449329 0.48578 0.523091 0.561019 0.599296 0.637628
0.675704 0.713195 0.749762 0.785056 0.818731 0.850441 0.879853 0.906649
0.930531 0.951229 0.968507 0.982161 0.992032 0.998002 1 0.998002 0.992032
0.982161 0.968507 0.951229 0.930531 0.906649 0.879853 0.850441 0.818731
0.785056 0.749762 0.713195 0.675704 0.637628 0.599296 0.561019 0.523091
0.48578 0.449329 0.413954 0.379842 0.347149 0.316004 0.286505 0.258722
0.232701 0.208462 0.186002 0.165299 0.146314 0.128993 0.113268 0.099063
0.0862936 0.0748701 0.0646996 0.0556875 0.0477393 0.0407622 0.0346658
0.0293636 0.024773 0.0208167 0.0174224 0.0145233 0.0120583 0.00997174
0.0082133;
#X coords 0 1 100 -1 200 140 1;
#X restore 307 35 graph;
#X obj 198 118 t b f;
#X obj 198 147 pack;
#X floatatom 143 72 5 0 0 2 mean - -, f 5;
#X msg 61 142 100;
#X obj 61 167 until;
#X obj 61 192 f;
#X obj 97 191 + 1;
#X obj 61 217 t f f;
#X obj 61 242 / 100;
#X obj 61 267 - 0.5;
#X obj 61 292 * 2;
#X obj 61 372 tabwrite gauss;
#X msg 111 165 0;
#X msg 235 203 list \$1 \$2;
#X obj 198 172 t b a;
#X floatatom 199 73 5 0 0 2 stdev - -, f 5;
#X obj 199 95 / 1000;
#X obj 39 96 t b b b;
#X obj 39 448 s gauss;
#X msg 39 413 normalize 1;
#X msg 39 30 bang to graph;
#X obj 143 94 / 100;
#X text 371 336 see fd_gauss~.pd;
#N canvas 0 22 450 300 math 0;
#X text 23 37 1/sqrt(2*stdev^2*PI) EXP -((x-mean)^2/2*stdv));
#X restore 443 364 pd math;
#X text 153 412 <-- NOTE: [fd_gauss] is NOT normalized \, so we are
normalizing the array after graphing (cpu-expensive), f 46;
#X text 274 284 inlet 1: float (x);
#X obj 61 344 fd_gauss 0 0.1;
#X text 274 301 inlet 1: list (mean \, stdev);
#X text 232 242 Calculates a Gaussian Distribution;
#X connect 1 0 2 0;
#X connect 1 1 2 1;
#X connect 2 0 15 0;
#X connect 3 0 22 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 7 0;
#X connect 6 0 8 0;
#X connect 7 0 6 1;
#X connect 8 0 9 0;
#X connect 8 1 12 1;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 11 0 27 0;
#X connect 13 0 6 1;
#X connect 14 0 27 0;
#X connect 15 0 18 0;
#X connect 15 1 14 0;
#X connect 16 0 17 0;
#X connect 17 0 1 0;
#X connect 18 0 20 0;
#X connect 18 1 4 0;
#X connect 18 2 13 0;
#X connect 20 0 19 0;
#X connect 21 0 18 0;
#X connect 22 0 2 0;
#X connect 27 0 12 0;
