#N canvas 20 475 500 215 14;
#X declare -path ~/Documents/fd_lib -path ./_lib;
#N canvas 70 100 450 250 sub 0;
#X coords 0 0 100 100 200 200 2 20 20;
#X restore 8 8 pd sub;
#X obj 280 175 bng 15 250 50 0 start-here empty start-here 17 7 0 10
-24198 -262144 -1;
#N canvas 320 400 200 290 menu 1;
#X obj 10 239 cnv 20 162 20 empty menu-info empty 20 12 0 14 -204786
-66577 0;
#N canvas 525 50 725 640 data-structures 0;
#X floatatom 36 190 5 0 0 0 - - -, f 5;
#X msg 36 218 scalar templ-0 \$1;
#X msg 36 157 240;
#X msg 72 157 300;
#X obj 644 571 bng 15 250 50 0 empty empty next->> 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 next 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-data-structures vis 0 \; pd-sub clear \; pd-menu-messages
vis 0 \, setbounds 525 50 1250 690 \, vis 1 \; pd-next vis 0 \;;
#X connect 0 0 1 0;
#X restore 644 591 pd next;
#X obj 27 572 bng 15 250 50 0 empty empty <<-prev 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 prev 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-data-structures vis 0 \; pd-arrays vis 0 \, setbounds
525 50 1250 690 \, vis 1 \; pd-prev vis 0 \;;
#X connect 0 0 1 0;
#X restore 27 592 pd prev;
#X obj 36 269 s pd-sub;
#X text 34 45 Switch back to non-GOP first:;
#X text 426 132 SORTING:;
#X msg 431 163 sort;
#X obj 431 269 s pd-sub;
#X obj 318 596 hradio 15 1 0 3 gop empty gop 0 -8 0 10 -262144 -1 -1
0;
#X text 17 372 "read" (and replace);
#X text 330 368 "mergefile";
#X text 503 368 "print" (as before);
#X text 485 161 <-- "sort" the data;
#N canvas 522 52 450 300 more 0;
#X text 39 27 "sort" reindexes all elements on the canvas in left to
right \, top to bottom order. It doesn't move the objets \, it sorts
the indices to the elements., f 43;
#X msg 228 245 vis 0;
#X obj 228 270 s pd-more;
#X text 280 245 <-- bang to close;
#X text 43 113 It's useful both for cord connections ("connect 0 0
1 0") and for treating the canvas as a timeline when traversing data
structures., f 41;
#X text 51 193 There is a whole suite of objects \, see;
#X text 114 217 doc/4.data.structures/;
#X connect 1 0 2 0;
#X restore 535 270 pd more sort;
#N canvas 526 51 520 409 more 0;
#X text 145 242 There is a whole suite of objects \, see;
#X text 203 262 doc/4.data.structures/;
#X msg 291 330 vis 0;
#X obj 291 355 s pd-more;
#X text 343 330 <-- bang to close;
#X text 21 127 NOTE: the number of variables available within that
scalar depends on the template definition with the [struct] object.
See [pd-info struct] on the parent patch.;
#X text 97 218 For more information:;
#X text 107 307 also \, see the [pd-more-graphing] section \, later
in this patch, f 19;
#X text 47 57 You can \, for example \, click and drag it on editmode.
;
#X text 17 29 "scalar" places a template (symbol) at point "x" (float)
;
#X msg 73 93 scalar template-symbol float1...symbol22...float33;
#X connect 2 0 3 0;
#X restore 205 269 pd more scalar;
#X msg 179 74 \; pd-sub clear;
#X msg 35 64 \; gop 0 \; pd-sub menu-open;
#X text 34 127 SCALAR:;
#X text 532 247 See here:;
#X text 204 247 See here:;
#X msg 41 396 test1.txt;
#X msg 53 419 test2.txt;
#X msg 63 442 test3.txt;
#X text 69 485 See here:;
#N canvas 0 22 474 354 info 0;
#X obj 48 14 inlet;
#X obj 48 87 symbol;
#X msg 242 124 bang;
#X obj 242 149 savepanel;
#X text 240 103 Another way is this:;
#X obj 242 174 makefilename %s.txt;
#X msg 48 112 add \$1;
#X obj 48 188 list trim;
#X msg 234 283 vis 0;
#X text 286 284 <-- bang to close;
#X obj 234 308 s pd-info;
#X obj 48 217 s pd-sub;
#X obj 48 138 mainpath data;
#X obj 48 163 list prepend read;
#X msg 242 199 \; pd-sub read \$1;
#X text 130 19 "read" takes a symbol like this: <full/path/to/filename.txt
>, f 35;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 5 0 14 0;
#X connect 6 0 12 0;
#X connect 7 0 11 0;
#X connect 8 0 10 0;
#X connect 12 0 13 0;
#X connect 13 0 7 0;
#X restore 41 511 pd info read;
#X msg 336 392 test1.txt;
#X msg 348 415 test2.txt;
#X text 364 481 See here:;
#N canvas 0 22 474 354 info 0;
#X obj 48 14 inlet;
#X obj 48 87 symbol;
#X msg 242 124 bang;
#X obj 242 149 savepanel;
#X text 240 103 Another way is this:;
#X obj 242 174 makefilename %s.txt;
#X msg 48 112 add \$1;
#X obj 48 188 list trim;
#X msg 234 283 vis 0;
#X text 286 284 <-- bang to close;
#X obj 234 308 s pd-info;
#X obj 48 217 s pd-sub;
#X obj 48 138 mainpath data;
#X text 130 19 "mergefile" takes a symbol like this: <full/path/to/filename.txt
>;
#X obj 48 163 list prepend mergefile;
#X msg 242 199 \; pd-sub mergefile \$1;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 5 0 15 0;
#X connect 6 0 12 0;
#X connect 7 0 11 0;
#X connect 8 0 10 0;
#X connect 12 0 14 0;
#X connect 14 0 7 0;
#X restore 336 507 pd info mergefile;
#X msg 531 414 test2.ps;
#X msg 512 391 test1.ps;
#X text 542 481 See here:;
#N canvas 0 22 521 365 info 0;
#X obj 48 14 inlet;
#X msg 272 139 bang;
#X obj 272 164 savepanel;
#X obj 272 189 makefilename %s.ps;
#X text 129 11 "print" takes a symbol like this: <full/path/to/filename.ps
>, f 35;
#X msg 261 287 vis 0;
#X text 312 286 <-- bang to close;
#X msg 122 59 \; pd-sub menu-open;
#X text 316 139 <-- a built-in way;
#X obj 48 39 t a b;
#X obj 48 104 symbol;
#X obj 48 208 list prepend print;
#X obj 48 233 list trim;
#X msg 48 139 add \$1;
#X obj 48 173 mainpath data;
#X obj 261 312 s pd-info;
#X obj 48 267 s pd-sub;
#X msg 272 223 \; pd-sub print \$1;
#X connect 0 0 9 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 17 0;
#X connect 5 0 15 0;
#X connect 9 0 10 0;
#X connect 9 1 7 0;
#X connect 10 0 13 0;
#X connect 11 0 12 0;
#X connect 12 0 16 0;
#X connect 13 0 14 0;
#X connect 14 0 11 0;
#X restore 512 507 pd info printing;
#X msg 547 437 test3.ps;
#N canvas 527 50 450 300 info 0;
#X obj 31 38 struct templ-0 float x;
#X obj 26 121 filledpolygon 0 0 1 0 10 0 210 5 210 5 10 0 10;
#X text 223 39 <-- "struct";
#X text 27 61 (previously "template") needed to bind the subpatch with
a template and draws a filled rectangle on it with [filledpolygon]
, f 46;
#X msg 231 235 vis 0;
#X text 283 237 <-- bang to close;
#X text 43 160 There is a whole suite of objects \, see;
#X text 101 180 doc/4.data.structures/;
#X obj 231 262 s pd-info;
#X connect 4 0 8 0;
#X restore 289 82 pd info struct;
#X text 411 83 <-- TEMPLATE;
#X msg 108 158 10 \, 50 \, 100 \, 150 \, 200;
#X text 195 374 "write";
#X msg 204 395 test1.txt;
#X msg 216 418 test2.txt;
#X msg 226 441 test3.txt;
#X text 232 484 See here:;
#N canvas 0 22 474 354 info 0;
#X obj 48 14 inlet;
#X obj 48 87 symbol;
#X msg 242 124 bang;
#X obj 242 149 savepanel;
#X text 240 103 Another way is this:;
#X obj 242 174 makefilename %s.txt;
#X text 130 19 "write" takes a symbol like this: <full/path/to/filename.txt
>, f 35;
#X msg 48 112 add \$1;
#X obj 48 163 list prepend write;
#X obj 48 188 list trim;
#X msg 234 283 vis 0;
#X text 286 284 <-- bang to close;
#X obj 234 308 s pd-info;
#X obj 48 217 s pd-sub;
#X msg 242 199 \; pd-sub write \$1;
#X obj 48 138 mainpath data;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 5 0 14 0;
#X connect 7 0 15 0;
#X connect 8 0 9 0;
#X connect 9 0 13 0;
#X connect 10 0 12 0;
#X connect 15 0 8 0;
#X restore 204 510 pd info write;
#X text 24 325 FILE READ/WRITE/MERGEFILE (only data elements):;
#X text 182 218 <-- "scalar" symbol list;
#X text 127 16 A SHORT INTRODUCTION TO DATA-STRUCTURE RELATED MESSAGES:
;
#N canvas 688 179 539 401 more 0;
#X text 33 20 "mergefile" loads like "read" \, but instead of replacing
\, it merges the current data structure (and non-data elements) with
the data structure to be loaded., f 56;
#X text 37 118 To use "mergefile" \, do the following:;
#X text 40 146 [1] put some scalars in a cleared canvas \; [2] write
it as file 1 \; [3] clear the canvas and put other scalars in different
places of the same canvas \; [4] write it as file 2 \; [5] clear the
canvas \; [6] read file 1 \; [7] mergefile file 2 \; [8] write it as
file 3 \; Now you have file 1 \, file 2 and the 1+2 merged in 3;
#X msg 308 333 vis 0;
#X obj 308 358 s pd-more;
#X text 360 333 <-- bang to close;
#X connect 3 0 4 0;
#X restore 337 533 pd more mergefile;
#X text 418 326 See the /data/ subdirectory.;
#X text 290 157 <-- click!;
#X text 84 189 <-- scroll!;
#X text 394 573 More on [pd-more-graphing];
#X connect 0 0 1 0;
#X connect 1 0 8 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 5 0;
#X connect 6 0 7 0;
#X connect 11 0 12 0;
#X connect 25 0 29 0;
#X connect 26 0 29 0;
#X connect 27 0 29 0;
#X connect 30 0 33 0;
#X connect 31 0 33 0;
#X connect 34 0 37 0;
#X connect 35 0 37 0;
#X connect 38 0 37 0;
#X connect 41 0 0 0;
#X connect 43 0 47 0;
#X connect 44 0 47 0;
#X connect 45 0 47 0;
#X restore 23 137 pd data-structures;
#N canvas 522 50 421 342 loadbang 0;
#X obj 24 44 loadbang;
#N canvas 685 129 450 300 preset 0;
#X obj 19 24 r start-here;
#X msg 19 49 \; pd-menu vis 0 \, setbounds 320 400 520 690 \, menu-open
\; pd-sub clear \, text 45 100 graph-on-parent \; pd-helpfiles.pd map
0 \, map 1 \; pd-subcanvases vis 0 \, setbounds 525 50 1250 690 \,
vis 1 \;, f 33;
#X connect 0 0 1 0;
#X restore 24 207 pd preset start-here;
#N canvas 506 65 273 344 preset 0;
#X obj 17 14 r close;
#X msg 17 39 \; pd-subcanvases vis 0 \; pd-creator vis 0 \; pd-loadbang
vis 0 \; pd-editing vis 0 \; pd-arrays vis 0 \; pd-data-structures
vis 0 \; pd-menu-messages vis 0 \; pd-more-graphing vis 0 \; pd-creator
vis 0 \; pd-pd-messages vis 0 \; pd-goodbye vis 0 \; pd-menu vis 0
\; pd-preset vis 0 \; pd-more vis 0 \; pd-info vis 0 \; pd-array vis
0 \; pd-sub menuclose \;;
#X connect 0 0 1 0;
#X restore 24 230 pd preset close;
#N canvas 246 66 998 372 preset 0;
#X obj 154 39 route vis;
#X obj 299 39 route vis;
#X obj 409 40 route vis;
#X obj 538 39 route vis;
#X obj 643 40 route vis;
#X obj 241 179 route vis;
#X obj 401 179 route vis;
#X obj 550 182 route vis;
#X obj 705 181 route vis;
#X obj 154 14 r pd-subcanvases;
#X obj 299 14 r pd-editing;
#X obj 409 15 r pd-visibility;
#X obj 538 14 r pd-arrays;
#X obj 643 15 r pd-data-structures;
#X obj 241 154 r pd-menu-messages;
#X obj 401 154 r pd-pd-messages;
#X obj 550 157 r pd-more-graphing;
#X obj 707 156 r pd-creator;
#X obj 154 64 sel;
#X obj 10 8 r pd-loadbang;
#X obj 10 33 route begin;
#X msg 48 111 10;
#X obj 175 88 bang;
#X obj 299 62 sel;
#X obj 320 86 bang;
#X obj 410 64 sel;
#X obj 431 88 bang;
#X obj 539 63 sel;
#X obj 560 87 bang;
#X obj 644 63 sel;
#X obj 665 87 bang;
#X obj 240 204 sel;
#X obj 261 228 bang;
#X obj 400 203 sel;
#X obj 421 227 bang;
#X obj 551 206 sel;
#X obj 572 230 bang;
#X obj 704 204 sel;
#X obj 725 228 bang;
#X msg 175 113 35;
#X msg 56 150 \; menu-info pos 10 \$1;
#X msg 619 307 \; menu-info pos 10 \$1;
#X msg 320 111 60;
#X msg 431 113 84;
#X msg 560 112 111;
#X msg 665 112 136;
#X msg 261 253 164;
#X msg 421 252 190;
#X msg 572 255 214;
#X msg 725 253 239;
#X obj 61 61 r close;
#X obj 827 180 route vis;
#X obj 826 203 sel;
#X obj 847 227 bang;
#X msg 847 252 265;
#X obj 829 155 r pd-goodbye;
#X connect 0 0 18 0;
#X connect 1 0 23 0;
#X connect 2 0 25 0;
#X connect 3 0 27 0;
#X connect 4 0 29 0;
#X connect 5 0 31 0;
#X connect 6 0 33 0;
#X connect 7 0 35 0;
#X connect 8 0 37 0;
#X connect 9 0 0 0;
#X connect 10 0 1 0;
#X connect 11 0 2 0;
#X connect 12 0 3 0;
#X connect 13 0 4 0;
#X connect 14 0 5 0;
#X connect 15 0 6 0;
#X connect 16 0 7 0;
#X connect 17 0 8 0;
#X connect 18 1 22 0;
#X connect 19 0 20 0;
#X connect 20 0 21 0;
#X connect 21 0 40 0;
#X connect 22 0 39 0;
#X connect 23 1 24 0;
#X connect 24 0 42 0;
#X connect 25 1 26 0;
#X connect 26 0 43 0;
#X connect 27 1 28 0;
#X connect 28 0 44 0;
#X connect 29 1 30 0;
#X connect 30 0 45 0;
#X connect 31 1 32 0;
#X connect 32 0 46 0;
#X connect 33 1 34 0;
#X connect 34 0 47 0;
#X connect 35 1 36 0;
#X connect 36 0 48 0;
#X connect 37 1 38 0;
#X connect 38 0 49 0;
#X connect 39 0 40 0;
#X connect 42 0 40 0;
#X connect 43 0 40 0;
#X connect 44 0 40 0;
#X connect 45 0 40 0;
#X connect 46 0 41 0;
#X connect 47 0 41 0;
#X connect 48 0 41 0;
#X connect 49 0 41 0;
#X connect 50 0 21 0;
#X connect 51 0 52 0;
#X connect 52 1 53 0;
#X connect 53 0 54 0;
#X connect 54 0 41 0;
#X connect 55 0 51 0;
#X restore 24 276 pd preset menu-info;
#N canvas 0 22 450 300 preset 0;
#X obj 43 14 r quit;
#X msg 43 88 menuclose;
#X obj 43 39 t b b;
#X obj 109 59 s close;
#X obj 43 64 del 100;
#X obj 43 112 s pd-helpfiles.pd;
#X connect 0 0 2 0;
#X connect 1 0 5 0;
#X connect 2 0 4 0;
#X connect 2 1 3 0;
#X connect 4 0 1 0;
#X restore 24 253 pd preset quit;
#X msg 24 69 \; pd-helpfiles.pd vis 0 \, setbounds 20 475 520 690 \,
vis 1 \, font 14 100 0 \, tidy \; pd-sub clear \; gop 2 \; close bang
\; 1-fd_title-i1 PD MESSAGES HELPER FILES \; 1-fd_title-i2 color 8
, f 40;
#X obj 24 12 declare -path ~/Documents/fd_lib -path ./_lib;
#X connect 0 0 5 0;
#X restore 23 10 pd loadbang ______;
#N canvas 525 50 725 640 subcanvases 0;
#X obj 30 554 s pd-sub;
#X msg 30 459 donecanvasdialog 1 -1 \$1 0 0 100 100 200 200 20 20;
#X text 53 379 0 = disabled \; 1 = graph on parent \; 2 = graph on
parent hiding name and arguments \;, f 26;
#X obj 644 571 bng 15 250 50 0 empty empty next->> 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 next 0;
#X obj 25 13 inlet;
#N canvas 0 22 450 300 preset 0;
#X obj 184 71 r newnames;
#X obj 273 72 r newnames2;
#X obj 163 164 s;
#X obj 252 164 s;
#X msg 75 66 vis 0;
#X obj 273 112 symbol;
#X obj 184 113 symbol;
#X obj 75 40 r noexamples;
#X obj 75 96 t a a a;
#X obj 75 199 s pd-example2;
#X connect 0 0 6 0;
#X connect 1 0 5 0;
#X connect 4 0 8 0;
#X connect 5 0 3 1;
#X connect 6 0 2 1;
#X connect 7 0 4 0;
#X connect 8 0 9 0;
#X connect 8 1 2 0;
#X connect 8 2 3 0;
#X restore 289 144 pd preset examples;
#X msg 25 38 \; pd-subcanvases vis 0 \; pd-editing vis 0 \, setbounds
525 50 1250 690 \, vis 1 \; pd-next vis 0 \; pd-more vis 0 \; noexamples
bang \;;
#X connect 0 0 2 0;
#X restore 644 591 pd next;
#X obj 27 595 bng 15 250 50 0 close empty close 17 7 0 10 -258699 -1
-1;
#X obj 318 596 hradio 15 1 0 3 gop empty gop 0 -8 0 10 -262144 -1 -1
2;
#X text 37 489 So \, to change the size of the graph:;
#X msg 346 74 whatever example;
#X msg 341 50 example whatever;
#X obj 341 112 list;
#N canvas 0 22 450 300 example 0;
#X text 139 91 just an empty patch;
#X restore 101 135 pd example;
#N canvas 0 22 450 300 example1 0;
#X text 122 90 just another empty page-patch;
#X restore 36 167 page example1;
#N canvas 0 22 450 300 example2 0;
#X obj 35 169 outlet~;
#X obj 35 68 inlet~;
#X obj 36 142 osc~;
#X obj 35 93 osc~;
#X obj 35 118 *~ 333;
#X text 39 20 put stuff like in any regular subpatch...;
#X connect 1 0 3 0;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 2 0;
#X restore 147 167 page example2;
#X text 341 14 RENAMING SUBPATCHES;
#X text 27 14 PD-SUBPATCH AND PAGE-SUBPATCH;
#X msg 501 51 example1 whatnot;
#X msg 508 74 whatnot example1;
#X obj 501 111 list;
#X obj 446 473 cnv 15 180 100 empty empty empty 20 12 0 14 -233017
-66577 0;
#X text 451 478 "pd-sub" is the subpatch on the main window where all
following examples will be performed., f 20;
#X obj 344 385 s pd-sub;
#N canvas 523 51 462 336 more 0;
#X text 294 63 xperpix \; yperpix \; graphme \; x1 \; y1 \; x2 \; y2
\; xpix \; ypix \; xmargin \; ymargin \;, f 9;
#X text 274 65 |||||||||||, f 1;
#X text 244 135 -->;
#X text 28 260 xperpix and yperpix are useful when graphme == 0;
#X text 33 288 e.g.: see doc/4.data-structures/07.sequencer.pd;
#X text 18 18 "donecanvasdialog" is useful for both GOP and non-GOP
;
#X text 44 108 It has 11 float arguments as in the following: (taken
from g_editor.c), f 24;
#X restore 447 440 pd more donecanvasdialog;
#X obj 344 335 hradio 15 1 0 3 empty empty gop 0 -8 0 10 -262144 -1
-1 2;
#N canvas 528 50 461 379 more 0;
#X text 179 98 x1 \; y1 \; x2 \; y2 \; xsize \; ysize \; graphme \;
xmargin \; ymargin \;;
#X text 41 255 (donecanvasdialog without xperpix or yperpix);
#X text 31 17 "coords" is more convenient for GOP patches;
#X text 46 64 It takes 9 float arguments as follows:;
#X text 36 293 NOTE: elements are NOT re-mapped and get re-drawn.;
#X text 42 314 This does not happen in "donecanvasdialog";
#X restore 447 415 pd more coords;
#X text 339 294 COORDS (Graph-on-parent-ing);
#X msg 344 355 coords 0 -1 1 1 200 200 \$1 20 20;
#X msg 39 509 donecanvasdialog 1 -1 2 1 1 100 100 100 100 20 20;
#X text 27 51 Subcanvases (i.e. \, subpatches) are called either by
typing "pd" in a box or by typing "page"., f 30;
#X obj 30 383 vradio 15 1 0 3 empty gop gop 0 -8 0 10 -262144 -1 -1
2;
#X text 22 292 DONECANVASDIALOG (all canvases);
#X text 444 391 See here:;
#X text 25 335 Graph-on-Parent (GOP) has 3 modes: (check the main patch)
, f 31;
#N canvas 0 22 450 300 more 0;
#X text 84 55 WARNING: Page-messages dont work \, only pd-messages
do., f 33;
#X msg 87 156 \; page-example2 rename whatever;
#X msg 88 112 \; page-example2 vis 1;
#X restore 26 230 pd more subpatches;
#N canvas 0 22 450 300 more 0;
#X text 38 114 "rename" changes the title and selector name to a new
one. This means that if changed to <newname> \, now you have to send
to <pd-newname>..., f 43;
#X text 38 198 ...HOWEVER \, the name is NOT changed on the *.pd file
\, which causes the new name to be forgotten the next time you open
the main patch (even if you save)., f 43;
#X text 34 24 "rename" takes a symbol, f 25;
#X text 110 81 (send to pd-patchname);
#X msg 154 58 rename newname;
#X restore 338 231 pd more renaming;
#X msg 341 148 \; pd-\$1 rename \$2 \; pd-\$2 vis 1 \; newnames pd-\$2
\;;
#X msg 501 149 \; pd-\$1 rename \$2 \; pd-\$2 vis 1 \; newnames2 pd-\$2
\;;
#X text 401 332 (somewhat less efficient);
#X text 106 555 <-----------------------------------------;
#X text 171 592 shortcut here -->;
#X connect 1 0 0 0;
#X connect 3 0 4 0;
#X connect 8 0 10 0;
#X connect 9 0 10 0;
#X connect 10 0 35 0;
#X connect 16 0 18 0;
#X connect 17 0 18 0;
#X connect 18 0 36 0;
#X connect 23 0 26 0;
#X connect 26 0 21 0;
#X connect 27 0 0 0;
#X connect 29 0 1 0;
#X restore 23 35 pd subcanvases ___;
#N canvas 525 50 725 640 visibility 0;
#X obj 20 522 s pd-sub;
#X msg 391 32 menuclose;
#X obj 22 100 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 22 120 vis \$1;
#X msg 429 102 1;
#X msg 390 102 2;
#X msg 390 136 zoom \$1;
#X msg 27 31 menu-open;
#X text 477 32 <-- closes the canvas;
#X text 116 31 <-- opens the canvas;
#X msg 409 375 vis 0 \, setbounds 50 50 250 250 \, vis 1;
#X obj 644 571 bng 15 250 50 0 empty empty next->> 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 next 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-visibility vis 0 \; pd-sub vis 0 \, relocate 450x250+0+0
0x0+70+100 \, vis 1 \; pd-arrays vis 0 \, setbounds 525 50 1250 690
\, vis 1 \; pd-next vis 0 \;;
#X connect 0 0 1 0;
#X restore 644 591 pd next;
#X obj 27 572 bng 15 250 50 0 empty empty <<-prev 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 prev 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-visibility vis 0 \; pd-editing vis 0 \, setbounds
525 50 1250 690 \, vis 1 \; pd-prev vis 0 \;;
#X connect 0 0 1 0;
#X restore 27 592 pd prev;
#X text 147 216 WARNING: the patch must be visible/opened or the gui
will crash. It always defaults to 1, f 25;
#X obj 22 230 spigot;
#X obj 81 211 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 22 261 map \$1;
#X msg 82 261 vis \$1;
#X obj 81 232 t f f;
#X obj 22 192 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 27 56 s pd-sub;
#X obj 391 57 s pd-sub;
#X obj 22 145 s pd-sub;
#X obj 22 306 s pd-sub;
#X obj 390 161 s pd-sub;
#X obj 409 482 s pd-sub;
#X text 21 354 'RELOCATE';
#X text 408 353 'SETBOUNDS';
#X obj 393 224 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 393 244 editmode \$1;
#X obj 393 269 s pd-sub;
#X text 41 188 <-- "map" hides/shows canvas elements.;
#X text 41 96 <-- "vis" enables/disables visibility.;
#X text 503 242 switch canvas to editmode (1) or runmode (0), f 16
;
#X text 474 133 "zoom" in (2) or back to normal (1). NOTE: only works
for non-data elements, f 28;
#X text 424 221 <-- "editmode";
#X text 466 102 <-- "zoom" in/out;
#X obj 318 596 hradio 15 1 0 3 gop empty gop 0 -8 0 10 -262144 -1 -1
2;
#X msg 20 375 vis 0 \, relocate 450x250+0+0 0x0+70+100 \, vis 1;
#X text 31 399 "relocate" tcl/tk way to set canvas Width \, Height
\, Xpos and Ypos. The format is as follows and it only works when the
patch visibility is disabled., f 42;
#X text 33 466 WARNING: updates should not be too often or Pd will
crash. Move the pd-sub window and click this box after, f 40;
#X text 417 397 "setbounds" (perhaps more intuitive than relocate)
uses screen coordinates to handle Xpos \, Ypos \, Width and Height.
It only works when the patch visibility is disabled, f 36;
#X text 270 6 CANVAS VISIBILITY;
#X text 130 331 CANVAS (PATCH) COORDINATES AND DIMENSIONS ON THE SCREEN
;
#N canvas 526 50 481 384 more 0;
#X obj 83 109 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 83 129 vis \$1;
#X obj 83 154 s pd-sub;
#X text 33 24 BUG?: in osx at least \, gui gets redrawn on parent patch
when vising 1/0 and GOP is enabled. This is why 'menu-open' and 'menuclose'
are better in GOP., f 44;
#X text 54 198 This would refresh the parent:;
#X msg 259 311 vis 0;
#X obj 259 336 s pd-more;
#X text 309 309 <-- bang to close;
#X text 157 107 <-- To reproduce this \, put some GOP gui and toggle
visibility, f 24;
#X msg 69 227 \; pd-helpfiles.pd map 0 \, map 1;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 5 0 6 0;
#X restore 163 141 pd more vis;
#X text 147 298 See [pd-more vis] above.;
#X text 162 120 See here:;
#X connect 1 0 23 0;
#X connect 2 0 3 0;
#X connect 3 0 24 0;
#X connect 4 0 6 0;
#X connect 5 0 6 0;
#X connect 6 0 26 0;
#X connect 7 0 22 0;
#X connect 10 0 27 0;
#X connect 11 0 12 0;
#X connect 13 0 14 0;
#X connect 16 0 18 0;
#X connect 17 0 20 0;
#X connect 18 0 25 0;
#X connect 19 0 25 0;
#X connect 20 0 16 1;
#X connect 20 1 19 0;
#X connect 21 0 16 0;
#X connect 30 0 31 0;
#X connect 31 0 32 0;
#X connect 40 0 0 0;
#X restore 23 85 pd visibility ____;
#N canvas 525 50 725 640 editing 0;
#X obj 446 322 s pd-sub;
#X msg 467 190 selectall;
#X msg 467 213 duplicate;
#X msg 467 259 copy;
#X msg 467 234 cut;
#X msg 468 282 paste;
#X msg 55 288 connect 1 0 2 0;
#X msg 48 265 sort;
#X msg 60 311 disconnect 1 0 2 0;
#X text 500 7 KEYBOARD SHORTCUTS;
#X text 450 379 NO KEYBOARD SHORTCUTS;
#X obj 278 545 s pd-sub;
#X msg 264 419 key 1 Up 1;
#X msg 210 447 key 1 Left 1;
#X msg 252 473 key 1 Down 1;
#X msg 318 447 key 1 Right 1;
#X obj 52 196 s pd-sub;
#X obj 48 338 s pd-sub;
#X obj 41 535 s pd-sub;
#X msg 41 413 vslider;
#X msg 41 436 hslider;
#X msg 41 461 vradio;
#X msg 41 484 hradio;
#X obj 451 506 s pd-sub;
#X msg 451 436 tidy;
#X msg 451 407 clear;
#X msg 451 478 loadbang;
#X msg 457 153 find symbol 0 0;
#X text 563 187 <-- select or deselect, f 12;
#X obj 27 572 bng 15 250 50 0 empty empty <<-prev 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 prev 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-editing vis 0 \; pd-subcanvases vis 0 \, setbounds
525 50 1250 690 \, vis 1 \; pd-prev vis 0 \;;
#X connect 0 0 1 0;
#X restore 27 592 pd prev;
#X obj 644 571 bng 15 250 50 0 empty empty next->> 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 next 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-editing vis 0 \; pd-more vis 0 \; pd-visibility
vis 0 \, setbounds 525 50 1250 690 \, vis 1 \; pd-next vis 0 \;;
#X connect 0 0 1 0;
#X restore 644 591 pd next;
#X msg 20 46 \; pd-sub menu-open;
#X msg 162 46 \; pd-sub menuclose;
#X obj 318 596 hradio 15 1 0 3 gop empty gop 0 -8 0 10 -262144 -1 -1
0;
#X obj 242 218 s pd-sub;
#X text 19 121 NON-GOP STUFF;
#X text 120 369 GOP-FRIENDLY IEMGUI;
#X text 211 120 GOP-FRIENDLY GUI;
#X text 86 265 <-- sort first;
#X text 19 149 [1];
#X text 20 171 [2];
#X text 209 146 [3];
#X text 209 168 [4];
#X text 208 191 [5];
#X msg 303 46 \; pd-sub clear;
#X msg 52 149 obj 25 25 osc~ 440;
#X msg 52 172 msg 25 50 set 1;
#X msg 242 145 floatatom 40 80;
#X msg 242 169 symbolatom 25 110;
#X msg 242 192 text 25 135 some text;
#X text 523 313 (move selected stuff with 'Arrow Keys'), f 22;
#N canvas 480 22 530 508 more 0;
#X obj 21 268 s pd-sub;
#X msg 167 239 findagain;
#X msg 22 137 find tgl 0 0;
#X msg 23 159 find vsl 0 0;
#X msg 23 180 find hsl 0 0;
#X msg 22 202 find cnv 0 0;
#X msg 226 165 toggle;
#X text 21 14 Pd has a built-in gui for this in the Find menu.;
#X obj 178 425 s pd-sub;
#X msg 140 327 key 1 Up 1;
#X msg 86 355 key 1 Left 1;
#X msg 128 381 key 1 Down 1;
#X msg 194 355 key 1 Right 1;
#X text 132 137 <-- [1] find a toggle;
#X text 287 164 <-- [2] Place another one;
#X text 253 241 <-- [3] this will find and alternate between found
toggles, f 31;
#X text 95 304 Move stuff around:;
#X msg 304 431 vis 0;
#X obj 304 456 s pd-more;
#X text 355 430 <-- bang to close;
#X msg 22 115 find bng 0 0;
#X text 20 37 Canvas needs to be visible \, and find needs: A_SYMBOL
\, A_FLOAT \, A_FLOAT;
#X text 19 83 (found elements will be highlited in blue);
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 9 0 8 0;
#X connect 10 0 8 0;
#X connect 11 0 8 0;
#X connect 12 0 8 0;
#X connect 17 0 18 0;
#X connect 20 0 0 0;
#X restore 596 153 pd more find;
#N canvas 529 52 501 460 more 0;
#X msg 306 267 sort;
#X obj 165 325 s pd-sub;
#X msg 306 201 obj 25 25 loadbang;
#X msg 306 168 clear;
#X obj 136 147 t b b b b b b;
#X msg 306 234 obj 25 50 tgl;
#X msg 306 300 connect 0 0 1 0;
#X msg 67 228 loadbang;
#X msg 25 172 bang;
#X msg 159 96 bang first only once;
#X msg 44 31 \; pd-sub menu-open;
#X text 60 8 Make subpatch visible first;
#X msg 186 31 \; pd-sub menuclose;
#X text 19 360 any [loadbang] object inside [pd-sub] will receive a
bang message when you send 'loadbang' to 'pd-sub', f 29;
#X msg 295 384 vis 0;
#X obj 295 409 s pd-more;
#X text 345 382 <-- bang to close;
#X connect 0 0 1 0;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 4 0 7 0;
#X connect 4 1 6 0;
#X connect 4 2 0 0;
#X connect 4 3 5 0;
#X connect 4 4 2 0;
#X connect 4 5 3 0;
#X connect 5 0 1 0;
#X connect 6 0 1 0;
#X connect 7 0 1 0;
#X connect 8 0 7 0;
#X connect 9 0 4 0;
#X connect 14 0 15 0;
#X restore 530 478 pd more loadbang;
#N canvas 525 52 715 599 more 0;
#X obj 41 562 s pd-sub;
#X msg 143 372 key 1 8 1;
#X msg 120 193 reselect;
#X msg 139 314 key 1 \$1 1;
#X msg 139 277 112 \, 104 \, 97 \, 115 \, 111 \, 114 \, 126 \, 32 \,
52 \, 50 \, 48;
#X text 234 372 <-- Backspace (delete);
#X msg 74 124 find osc~ 0 0;
#N canvas 569 44 549 327 about-keys 0;
#X msg 72 221 key 1 49 0;
#X msg 356 222 key 1 Up 1;
#X msg 350 279 key 1 Down 1;
#X msg 308 253 key 1 Left 1;
#X msg 416 253 key 1 Right 1;
#X text 289 193 Arrow Keys (with Shift ON):;
#X text 33 92 This routine is called whenever a key is pressed or released.
"x" may be zero if there's no current canvas. The first argument is
true or false for down/up \; the second one is either a symbolic key
name (e.g. \, "Right" or an Ascii key number. The third is the shift
key.;
#X text 34 68 From some part of the code:;
#X text 38 20 (All we are doing is sending a key id to a canvas);
#X restore 534 493 pd about-keys;
#X text 118 36 How to edit text inside an obj/msg box using only messages:
;
#X text 169 91 [1] make sure you have an object (e.g. osc~);
#X text 196 137 <-- [2] Find an object (e.g. osc~);
#X text 192 193 <-- [3] "reselect" highlights text in blue (enables
editing);
#X text 158 229 [4] Now \, we type text into the object sending key
numbers:;
#X text 254 254 (e.g. 'phasor~ 420');
#X obj 139 232 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 571 420 key;
#X floatatom 571 445 5 0 0 0 - - -, f 5;
#X text 513 395 see helpfile for:;
#X text 549 471 and also:;
#X text 266 15 FUN WITH FAKE KEYS;
#X msg 86 152 findagain;
#X msg 151 450 key 1 \$1 1;
#X text 142 349 [5] If we need to correct \, we can simply send the
Backspace key:, f 65;
#X text 251 423 [6] And type again the corrected text, f 16;
#X msg 159 424 52 \, 53 \, 49;
#X msg 157 512 editmode 0;
#X text 265 504 [7] Use this message to get out of the selection mode.
, f 19;
#X msg 555 89 \; pd-sub clear;
#X msg 40 94 obj 100 40 osc~;
#X msg 151 401 32;
#X msg 476 530 vis 0;
#X obj 476 555 s pd-more;
#X text 526 528 <-- bang to close;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 3 0;
#X connect 6 0 0 0;
#X connect 14 0 4 0;
#X connect 15 0 16 0;
#X connect 20 0 0 0;
#X connect 21 0 0 0;
#X connect 24 0 21 0;
#X connect 25 0 0 0;
#X connect 28 0 0 0;
#X connect 29 0 21 0;
#X connect 30 0 31 0;
#X restore 544 531 pd more keyboard-fun;
#X text 14 241 CONNECTIONS;
#X text 15 263 [6];
#X text 14 286 [7];
#X obj 120 534 s pd-sub;
#X msg 120 484 mycnv;
#X msg 120 437 toggle;
#X msg 120 508 bng;
#X msg 120 412 vumeter;
#X msg 120 461 numbox;
#X text 35 391 [1] create one and;
#X text 232 391 [2] move it around;
#X text 510 406 <-- clears canvas;
#X msg 305 514 key 1 8 1;
#X text 309 495 delete:;
#X text 452 132 "find";
#X text 85 8 Make subpatch visible first (covered in next section)
, f 28;
#X text 89 93 PUTTING STUFF ON THE CANVAS;
#X msg 626 258 key 1 8 1;
#X text 502 235 <-- 'cut' also to delete;
#X text 592 258 or:;
#X text 594 130 See here:;
#X text 270 268 See here:;
#X text 531 460 See here:;
#X text 542 511 See here:;
#X text 493 435 <-- automatic tidiness;
#X msg 465 57 test2.ps;
#X msg 446 34 test1.ps;
#X text 471 83 See here:;
#X text 522 31 "print" as postscript.;
#N canvas 0 22 521 365 info 0;
#X obj 48 14 inlet;
#X msg 272 139 bang;
#X obj 272 164 savepanel;
#X obj 272 189 makefilename %s.ps;
#X text 129 11 "print" takes a symbol like this: <full/path/to/filename.ps
>, f 35;
#X obj 48 287 outlet;
#X msg 261 287 vis 0;
#X obj 261 312 s pd-more;
#X text 312 286 <-- bang to close;
#X msg 122 59 \; pd-sub menu-open;
#X msg 272 223 print \$1;
#X text 316 139 <-- a built-in way;
#X obj 48 173 mainpath postscript;
#X obj 48 39 t a b;
#X obj 48 104 symbol;
#X obj 48 208 list prepend print;
#X obj 48 233 list trim;
#X obj 141 287 print -n;
#X msg 48 139 add \$1;
#X connect 0 0 13 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 10 0;
#X connect 6 0 7 0;
#X connect 10 0 5 0;
#X connect 12 0 15 0;
#X connect 13 0 14 0;
#X connect 13 1 9 0;
#X connect 14 0 18 0;
#X connect 15 0 16 0;
#X connect 16 0 5 0;
#X connect 16 0 17 0;
#X connect 18 0 12 0;
#X restore 446 104 pd info printing;
#N canvas 526 52 474 293 info 0;
#N canvas 529 52 527 371 more 0;
#X text 42 239 if you need more complex message creation \, see the
helpfiles for:, f 25;
#X msg 273 289 see my helpfile;
#X obj 266 241 text tolist;
#X obj 365 241 text fromlist;
#X text 25 40 Send a message to a canvas with the following attributes:
;
#X text 48 14 TO CREATE AN OBJECT:;
#X text 26 128 Send a message to a canvas with the following attributes:
;
#X text 46 112 TO CREATE A MESSAGE BOX:;
#X text 265 267 or check help fot this guy:;
#X msg 98 69 obj x y any-object-name object-arguments ...;
#X msg 101 159 msg x y text inside the message box ...;
#X restore 164 201 pd more non-gop;
#N canvas 525 51 591 204 more 0;
#X msg 44 35 \; pd-sub menu-open;
#X text 60 8 Make subpatch visible first;
#X msg 186 35 \; pd-sub menuclose;
#X msg 48 132 bang;
#X msg 304 131 bang;
#X msg 189 130 bang;
#X text 107 95 Click on any of these:;
#N canvas 525 52 604 337 floatatom 0;
#X obj 29 274 s pd-sub;
#X msg 29 97 0 \, 1 \, 2 \, 3;
#X obj 29 122 t f f;
#X obj 29 147 * 40;
#X obj 29 199 pack, f 5;
#X obj 29 172 + 50;
#X msg 89 147 clear;
#X text 367 17 xpos (float) \; ypos (float) \; width (float) \; lower-limit
(float) \; upper-limit (float) \; title (symbol) \; receive (symbol)
\; send (symbol) \; title orientation (float);
#X msg 84 19 bang;
#X text 170 19 "floatatom" takes 9 arguments and they are the following:
, f 21;
#X msg 29 236 floatatom 100 \$1 5 -35 35 \$2 f_title-\$2 receiver-\$2
sender- \$2, f 63;
#X obj 29 17 inlet;
#X obj 29 49 t b b b;
#X msg 148 111 1;
#X msg 164 81 0;
#X text 194 82 <-- bang to close;
#X msg 157 145 \; pd-floatatom vis \$1 \; pd-symbolatom vis 0 \; pd-text
vis 0 \;;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 4 1;
#X connect 3 0 5 0;
#X connect 4 0 10 0;
#X connect 5 0 4 0;
#X connect 6 0 0 0;
#X connect 8 0 12 0;
#X connect 10 0 0 0;
#X connect 11 0 12 0;
#X connect 12 0 1 0;
#X connect 12 1 6 0;
#X connect 12 2 13 0;
#X connect 13 0 16 0;
#X connect 14 0 16 0;
#X restore 48 159 pd floatatom;
#N canvas 527 51 581 297 text 0;
#X obj 29 254 s pd-sub;
#X msg 29 97 0 \, 1 \, 2 \, 3;
#X obj 29 122 t f f;
#X obj 29 147 * 40;
#X obj 29 172 + 50;
#X msg 90 145 clear;
#X msg 84 19 bang;
#X obj 29 17 inlet;
#X obj 29 199 pack f f 25;
#X msg 207 53 text xpos ypos something_to_write;
#X text 170 19 "text" takes 2 floats (x \, y) and a list to write;
#X msg 29 224 text \$3 \$1 example id=\$2 x=\$3 y=\$1;
#X obj 29 49 t b b b;
#X msg 153 104 1;
#X msg 158 134 \; pd-floatatom vis 0 \; pd-symbolatom vis 0 \; pd-text
vis \$1 \;;
#X msg 160 79 0;
#X text 193 80 <-- bang to close;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 8 1;
#X connect 3 0 4 0;
#X connect 4 0 8 0;
#X connect 5 0 0 0;
#X connect 6 0 12 0;
#X connect 7 0 12 0;
#X connect 8 0 11 0;
#X connect 11 0 0 0;
#X connect 12 0 1 0;
#X connect 12 1 5 0;
#X connect 12 2 13 0;
#X connect 13 0 14 0;
#X connect 15 0 14 0;
#X restore 189 157 pd text;
#N canvas 525 52 594 283 symbolatom 0;
#X obj 29 254 s pd-sub;
#X msg 29 97 0 \, 1 \, 2 \, 3;
#X obj 29 122 t f f;
#X obj 29 147 * 40;
#X obj 29 199 pack, f 5;
#X obj 29 172 + 50;
#X msg 95 153 clear;
#X text 161 14 "symbolatom" takes 9 arguments and they are the following:
, f 21;
#X text 366 17 xpos (float) \; ypos (float) \; width (float) \; lower-limit
(float) \; upper-limit (float) \; title orientation (float) \; title
(symbol) \; receive (symbol) \; send (symbol) \;;
#X msg 29 224 symbolatom 97 \$1 6 1 1 \$2 s_title-\$2 receive-\$2 send-\$2
, f 62;
#X msg 84 19 bang;
#X obj 29 17 inlet;
#X obj 29 49 t b b b;
#X msg 154 96 1;
#X msg 165 72 0;
#X text 198 73 <-- bang to close;
#X msg 157 122 \; pd-floatatom vis 0 \; pd-symbolatom vis \$1 \; pd-text
vis 0 \;;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 2 1 4 1;
#X connect 3 0 5 0;
#X connect 4 0 9 0;
#X connect 5 0 4 0;
#X connect 6 0 0 0;
#X connect 9 0 0 0;
#X connect 10 0 12 0;
#X connect 11 0 12 0;
#X connect 12 0 1 0;
#X connect 12 1 6 0;
#X connect 12 2 13 0;
#X connect 13 0 16 0;
#X connect 14 0 16 0;
#X restore 304 158 pd symbolatom;
#X msg 373 28 vis 0;
#X obj 373 53 s pd-more;
#X text 427 29 <-- bang to close;
#X connect 3 0 7 0;
#X connect 4 0 9 0;
#X connect 5 0 8 0;
#X connect 10 0 11 0;
#X restore 164 224 pd more gop;
#N canvas 661 63 487 381 more 0;
#N canvas 300 22 250 128 controls 0;
#X restore 370 12 pd controls;
#X obj 212 237 vsl 15 128 0 127 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X obj 216 199 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 232 235 vradio 15 1 0 8 empty empty empty 0 -8 0 10 -262144
-1 -1 0;
#X obj 213 217 hradio 15 1 0 8 empty empty empty 0 -8 0 10 -262144
-1 -1 0;
#X obj 168 243 vu 15 120 empty empty -1 -8 0 10 -66577 -1 1 0;
#X obj 178 217 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 195 217 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 251 236 cnv 15 100 60 empty empty empty 20 12 0 14 -233017 -66577
0;
#X obj 156 201 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 0 256;
#X text 43 169 For more info \, check the help files for these:;
#X msg 41 9 bang;
#N canvas 0 22 450 300 tbb 0;
#X obj 232 185 loadbang;
#X msg 141 109 list sub-controls controls, f 17;
#X obj 176 265 s pd-controls;
#X msg 219 232 clear \, vis 0;
#X msg 159 231 vis 1;
#X obj 125 71 t b b b b;
#X obj 124 44 spigot 1;
#X msg 241 45 0;
#X obj 130 181 t b b;
#X msg 89 43 1;
#X obj 32 41 del 10;
#X obj 141 150 outlet;
#X obj 125 17 inlet;
#X obj 366 44 inlet;
#X connect 0 0 3 0;
#X connect 1 0 11 0;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 8 0;
#X connect 5 1 1 0;
#X connect 5 2 3 0;
#X connect 5 3 7 0;
#X connect 6 0 5 0;
#X connect 7 0 6 1;
#X connect 8 0 10 0;
#X connect 8 1 4 0;
#X connect 9 0 6 1;
#X connect 10 0 9 0;
#X connect 12 0 6 0;
#X connect 13 0 2 0;
#X restore 41 54 pd tbb;
#X text 83 6 <-- bang to create something here:;
#N canvas 382 22 842 641 huge-message 0;
#X obj 9 21 inlet;
#X msg 9 48 \; pd-\$2 clear \; pd-\$2 obj 10 10 pd \$1 \; pd-\$1 coords
0 -1 1 1 200 100 2 0 0 \; pd-\$1 obj 0 0 cnv 15 200 100 myCanvas myCanvasR
dynamically_generated_canvas 10 10 0 10 14 22 \; \; pd-\$1 obj 210
15 r mytgl \; pd-\$1 obj 210 35 metro 300 \; pd-\$1 obj 210 55 tgl
\; pd-\$1 obj 210 75 - 0.5 \; pd-\$1 obj 210 95 * 2 \; pd-\$1 obj 210
115 pack f 300 \; pd-\$1 obj 210 135 line \; pd-\$1 obj 210 155 s myhsl-set
\; \; pd-\$1 obj 260 55 r mytgl \; pd-\$1 obj 260 75 sel 0 \; pd-\$1
msg 260 95 stop \; \; pd-\$1 obj 10 20 tgl 15 0 mytgl mytgl-set <--toggle
20 5 0 10 1 16 22 15 \; pd-\$1 obj 13 40 hsl 150 12 -1 1 0 0.5 myhsl
myhsl-set <--hslider 10 6 0 10 22 13 16 0 0 \; pd-\$1 obj 10 60 nbx
8 14 -1 1 0 256 empty myhsl <--numbox 80 6 0 10 22 13 22 0 0 \; pd-\$1
obj 10 155 outlet \; \; \; pd-\$1 connect 1 0 2 0 \; pd-\$1 connect
2 0 3 0 \; pd-\$1 connect 3 0 4 0 \; pd-\$1 connect 4 0 5 0 \; pd-\$1
connect 5 0 6 0 \; pd-\$1 connect 6 0 7 0 \; pd-\$1 connect 7 0 8 0
\; \; pd-\$1 connect 9 0 10 0 \; pd-\$1 connect 10 0 11 0 \; pd-\$1
connect 11 0 7 0 \; pd-\$1 connect 14 0 15 0 \; mytgl-set 1 \; pd-\$1
vis 0 \;, f 98;
#X connect 0 0 1 0;
#X restore 41 83 pd huge-message;
#X msg 152 34 clear \, vis 0;
#X msg 97 31 vis 1;
#X text 73 118 (also present if you open a .pd file that has iemgui
with a texteditor), f 41;
#X text 170 84 <-- see this huge message to check some iemgui creation
arguments..., f 34;
#X msg 267 318 vis 0;
#X obj 267 343 s pd-more;
#X text 318 317 <-- bang to close;
#X connect 11 0 12 0;
#X connect 12 0 14 0;
#X connect 15 0 12 1;
#X connect 16 0 12 1;
#X connect 19 0 20 0;
#X restore 164 247 pd more iemgui;
#X obj 28 227 s pd-sub;
#X text 16 70 You can also create any of these without arguments:;
#X text 36 95 (patchcords get automatically connected);
#X text 159 170 See here for more arguments:;
#X msg 28 117 obj \, msg \, floatatom \, symbolatom \, text;
#X msg 23 20 \; pd-sub menu-open \, clear;
#X msg 316 228 vis 0;
#X obj 316 253 s pd-info;
#X connect 7 0 3 0;
#X connect 9 0 10 0;
#X restore 270 291 pd info put;
#N canvas 529 54 580 548 info 0;
#X text 37 458 WARNING: If you send a connect message to a cleared
canvas \, pd might crash., f 39;
#X text 80 53 objID outletID target-objID target-inletID;
#X msg 38 225 0 \, 1 \, 2 \, 3 \, 4 \, 5 \, 6 \, 7 \, 8;
#X msg 273 225 0 \, 1 \, 2 \, 3 \, 4 \, 5 \, 6 \, 7 \, 8;
#X obj 38 340 s pd-info-0;
#X obj 273 342 s pd-info-0;
#X text 58 187 "connect";
#X text 267 195 "disconnect";
#X text 368 435 bang to close;
#N canvas 528 51 490 564 preset 0;
#X obj 31 10 inlet;
#X msg 103 85 \; pd-info-0 clear \, obj 100 50 receive test-list \,
obj 100 100 unpack 0 1 2 3 4 5 6 7 8 \, connect 0 0 1 0 \, obj 100
150 pack 0 1 2 3 4 5 6 7 8 \, obj 100 200 print -n \, connect 2 0 3
0 \, vis 1 \, sort, f 44;
#X obj 31 202 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 268 518 s test-list;
#X obj 268 492 pack f f f f f f f f f;
#X obj 31 247 t b b b b b b b b b;
#X obj 31 272 random 10;
#X obj 41 292 random 10;
#X obj 51 312 random 10;
#X obj 61 332 random 10;
#X obj 71 352 random 10;
#X obj 81 372 random 10;
#X obj 91 392 random 10;
#X obj 101 412 random 10;
#X obj 111 432 random 10;
#X obj 31 35 sel 0 1;
#X obj 66 61 t b b;
#X msg 66 86 1;
#X msg 31 86 0;
#X text 206 214 Usually \, it is better to sort the canvas before making
connections. It depends on each case., f 31;
#X text 207 289 It is also best to start from a fresh canvas \, instead
of a dirty one. Text also counts as objectID \, which makes indexing
rather complicated., f 31;
#N canvas 21 52 450 300 info-0 0;
#X obj 100 50 receive test-list;
#X obj 100 100 unpack 0 1 2 3 4 5 6 7 8;
#X obj 100 150 pack 0 1 2 3 4 5 6 7 8;
#X obj 100 200 print -n;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 1 1 2 1;
#X connect 1 2 2 2;
#X connect 1 3 2 3;
#X connect 1 7 2 7;
#X connect 2 0 3 0;
#X restore 282 19 pd info-0 connections;
#X text 118 60 All obj creation happens in this message:;
#X obj 31 222 metro 1000;
#X connect 0 0 15 0;
#X connect 2 0 23 0;
#X connect 4 0 3 0;
#X connect 5 0 6 0;
#X connect 5 1 7 0;
#X connect 5 2 8 0;
#X connect 5 3 9 0;
#X connect 5 4 10 0;
#X connect 5 5 11 0;
#X connect 5 6 12 0;
#X connect 5 7 13 0;
#X connect 5 8 14 0;
#X connect 6 0 4 0;
#X connect 7 0 4 1;
#X connect 8 0 4 2;
#X connect 9 0 4 3;
#X connect 10 0 4 4;
#X connect 11 0 4 5;
#X connect 12 0 4 6;
#X connect 13 0 4 7;
#X connect 14 0 4 8;
#X connect 15 0 18 0;
#X connect 15 1 16 0;
#X connect 16 0 17 0;
#X connect 16 1 1 0;
#X connect 17 0 2 0;
#X connect 18 0 2 0;
#X connect 23 0 5 0;
#X restore 39 142 pd preset info-0;
#X msg 38 311 connect 1 \$1 2 \$1;
#X msg 273 312 disconnect 1 \$1 2 \$1;
#X msg 286 255 0;
#X msg 51 255 0;
#X msg 295 287 4 \, 5 \, 6 \, 8;
#X msg 62 285 4 \, 5 \, 6 \, 8;
#X text 419 260 <-- try this;
#X obj 39 121 tgl 15 0 empty start-info-0 empty 17 7 0 10 -262144 -1
-1 0 1;
#X text 34 100 [1] Click this first:;
#X text 241 99 [2] Click on the large connect message below and look
at the console for 9 incoming random numbers. Try disconnecting and
see what happens:, f 37;
#X text 58 20 "connect/disconnect" takes two pairs of floats:;
#X text 84 256 <-- 'hot' inlet;
#X text 39 375 NOTE: Connecting the same inlets more than once (click
the connect message again) can lead to redunancies or weird behavior
depending on the connected objects...;
#X msg 369 458 \; pd-info-0 vis 0 \; start-info-0 0 \; pd-info vis
0 \;;
#X text 39 203 (see console);
#X obj 403 261 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 403 205 t b b;
#X connect 2 0 10 0;
#X connect 3 0 11 0;
#X connect 10 0 4 0;
#X connect 11 0 5 0;
#X connect 12 0 11 0;
#X connect 13 0 10 0;
#X connect 14 0 11 0;
#X connect 15 0 10 0;
#X connect 17 0 9 0;
#X connect 25 0 26 0;
#X connect 26 0 14 0;
#X connect 26 1 2 0;
#X restore 270 314 pd info connect;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 17 0;
#X connect 7 0 17 0;
#X connect 8 0 17 0;
#X connect 12 0 11 0;
#X connect 13 0 11 0;
#X connect 14 0 11 0;
#X connect 15 0 11 0;
#X connect 19 0 18 0;
#X connect 20 0 18 0;
#X connect 21 0 18 0;
#X connect 22 0 18 0;
#X connect 24 0 23 0;
#X connect 25 0 23 0;
#X connect 26 0 23 0;
#X connect 27 0 0 0;
#X connect 29 0 30 0;
#X connect 31 0 32 0;
#X connect 47 0 16 0;
#X connect 48 0 16 0;
#X connect 49 0 36 0;
#X connect 50 0 36 0;
#X connect 51 0 36 0;
#X connect 60 0 59 0;
#X connect 61 0 59 0;
#X connect 62 0 59 0;
#X connect 63 0 59 0;
#X connect 64 0 59 0;
#X connect 68 0 11 0;
#X connect 73 0 0 0;
#X connect 81 0 85 0;
#X connect 82 0 85 0;
#X connect 85 0 0 0;
#X restore 23 60 pd editing _______;
#N canvas 525 50 725 640 arrays 0;
#X msg 139 344 sinesum 64 1;
#X msg 177 452 cosinesum 64 1 2 3 4 \, normalize 1, f 21;
#X obj 86 531 s pd-sub;
#X msg 188 493 const 0.4;
#X obj 644 571 bng 15 250 50 0 empty empty next->> 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 next 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-arrays vis 0 \; pd-array vis 0 \; pd-data-structures
vis 0 \, setbounds 525 50 1250 690 \, vis 1 \; pd-next vis 0 \;;
#X connect 0 0 1 0;
#X restore 644 591 pd next;
#X obj 27 572 bng 15 250 50 0 empty empty <<-prev 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 prev 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-arrays vis 0 \; pd-array vis 0 \; pd-visibility
vis 0 \, setbounds 525 50 1250 690 \, vis 1 \; pd-prev vis 0 \;;
#X connect 0 0 1 0;
#X restore 27 592 pd prev;
#X msg 91 136 menuarray;
#X obj 91 166 s pd-sub;
#X text 144 262 <-- [2] draw an array inside;
#X text 248 343 <-- [3] fill the array with something;
#X msg 143 412 arraydialog myarray-2 1 100 1;
#X text 387 411 <-- [4] draw a second array inside;
#X text 361 460 <-- [5] fill the array with something else;
#X obj 139 369 s myarray-1;
#X obj 177 519 s myarray-2;
#X msg 274 42 \; pd-sub menu-open;
#X text 272 18 Make subpatch visible first;
#X msg 416 42 \; pd-sub menuclose;
#X text 89 206 PROCESS TO MANUALLY CREATE AN ARRAY IN A GRAPH;
#X obj 318 596 hradio 15 1 0 3 gop empty gop 0 -8 0 10 -262144 -1 -1
0;
#X msg 558 41 \; pd-sub clear;
#X text 404 234 <-- [1] draw a graph;
#X msg 87 235 graph mygraph 0 -1 66 1 230 20 430 220;
#X msg 110 264 1;
#X msg 110 316 arraydialog myarray-1 67 0 \$1;
#X msg 116 290 0;
#N canvas 525 51 562 352 more 0;
#X text 115 119 size of the array;
#X text 120 179 size of the box;
#X text 115 94 name of the array;
#X text 105 71 "graph" takes 9 arguments (or none);
#X msg 335 279 vis 0;
#X obj 335 304 s pd-more;
#X text 387 279 <-- bang to close;
#X text 42 15 A graph is a canvas holding a data structure. You can
do essentially the same things to it as to a data structure;
#X text 274 93 name (symbol) \; x1 \; y1 \; x2 \; y2 \; xpos1 \; ypos1
\; xpos2 \; ypos2 \;;
#X connect 4 0 5 0;
#X restore 426 508 pd more graph;
#X text 422 484 See here:;
#X text 46 25 CHECK OUT THIS MINI TUTORIAL:, f 9;
#X obj 129 26 bng 50 250 50 0 array-tutorial empty empty 17 7 0 10
-24198 -1 -1;
#N canvas 20 50 300 375 array 0;
#X text 24 273 for more info \, see help for:;
#X obj 122 302 array;
#X text 6 7 A mini tutorial on array messages:;
#X msg 99 29 \; gop 0 \; pd-sub clear;
#X obj 10 93 vradio 24 1 0 7 indx indx-set start-here 0 -8 0 10 -262144
-1 -1 6;
#N canvas 527 50 509 456 dialog 0;
#X obj 31 337 s pd-sub;
#X msg 34 95 0;
#X msg 40 120 2;
#X msg 46 145 4;
#X text 74 121 <-- "Points";
#X text 74 94 <-- "Polygon";
#X text 85 144 <-- "Bezier";
#X text 30 18 "arraydialog") \, A_SYMBOL \, A_FLOAT \, A_FLOAT \, A_FLOAT
\,;
#X msg 31 197 clear \, arraydialog testarray1 100 \$1 0 \, map 0 \,
map 1;
#X text 67 236 Draw a second array inside (bezier curve);
#X msg 72 262 arraydialog testarray2 100 4 1 \, map 0 \, map 1;
#X text 157 286 (Added map 0 \, map 1 so it displays);
#X text 216 104 <-- types of curves;
#X text 195 96 ||||, f 1;
#X text 102 51 name \, size \, type \, same/diff graph;
#X text 249 131 Draw the array with the mouse to see them, f 20;
#X msg 380 384 \; indx-set 1 \;;
#X text 254 393 NEXT PAGE -->;
#X msg 28 381 \; allhide bang \; array-tutorial-end bang \;;
#X connect 1 0 8 0;
#X connect 2 0 8 0;
#X connect 3 0 8 0;
#X connect 8 0 0 0;
#X connect 10 0 0 0;
#X restore 37 95 pd dialog ___________________;
#N canvas 525 51 558 458 viewlist 0;
#X msg 31 117 arrayviewlistnew;
#X msg 61 225 arrayviewclose;
#X text 197 224 <-- [3] closes the list-view;
#X text 175 117 <-- [1] open array as a list-view;
#X floatatom 49 172 5 0 0 0 - - -, f 5;
#X text 96 170 <-- index;
#X obj 31 327 s;
#X obj 75 262 loadbang;
#X msg 75 287 symbol testarray1;
#X msg 75 309 symbol testarray2;
#X text 241 283 <-- change arrays, f 7;
#X msg 49 196 arrayviewlistfillpage 0 \$1;
#X text 279 196 <-- [2] goes to a specified index;
#X text 17 14 Click this first:;
#X msg 19 41 \; pd-sub clear \, arraydialog testarray1 100 0 0 \, arraydialog
testarray2 100 2 0 \, map 0 \, map 1;
#X text 42 149 (move the pop-up window to the left to see this:);
#X msg 380 384 \; indx-set 3 \;;
#X msg 33 384 \; indx-set 1 \;;
#X text 254 393 NEXT PAGE -->;
#X text 128 393 <-- PREV PAGE;
#X connect 0 0 6 0;
#X connect 1 0 6 0;
#X connect 4 0 11 0;
#X connect 7 0 8 0;
#X connect 8 0 6 1;
#X connect 9 0 6 1;
#X connect 11 0 6 0;
#X restore 37 119 pd viewlist _________________;
#N canvas 526 48 522 445 bounds 0;
#X text 19 122 "bounds") \, A_FLOAT \, A_FLOAT \, A_FLOAT \, A_FLOAT
\, A_NULL) \;;
#X text 15 12 Click this first:;
#X obj 27 334 s bounds-test;
#X text 185 228 <-- inside dimensions of the graph;
#X msg 14 34 \; pd-sub clear \, arraydialog bounds-test 67 0 0 \, map
0 \, map 1 \; bounds-test sinesum 64 1 \;;
#X msg 36 229 bounds 0 -2 128 2;
#X msg 27 178 bounds 0 -1 67 1;
#X msg 48 279 bounds 0 -4 256 4;
#X text 169 177 x1 \, y1 \, x2 \, y2;
#X text 296 178 (default 0 1 67 -1);
#X msg 380 384 \; indx-set 2 \;;
#X msg 33 384 \; indx-set 0 \;;
#X text 254 393 NEXT PAGE -->;
#X text 128 393 <-- PREV PAGE;
#X connect 5 0 2 0;
#X connect 6 0 2 0;
#X connect 7 0 2 0;
#X restore 37 143 pd bounds ___________________;
#N canvas 526 50 565 464 beauty 0;
#X text 32 11 Click this first:;
#X obj 34 262 s beauty-test;
#X obj 303 277 s beauty-test;
#X text 29 310 "xticks") \, A_FLOAT \, A_FLOAT \, A_FLOAT \, 0) \;
"xlabel") \, A_GIMME \, 0) \; "yticks") \, A_FLOAT \, A_FLOAT \, A_FLOAT
\, 0) \; "ylabel" A_GIMME \, 0) \;;
#X msg 303 201 xlabel 700 0 1023;
#X msg 311 244 ylabel -100 -512 512;
#X msg 45 225 yticks 0 16 4;
#X msg 34 194 xticks 0 32 4;
#X msg 31 33 \; pd-sub clear \, arraydialog beauty-test 1027 4 0 \,
map 0 \, map 1 \; beauty-test bounds 0 -512 1023 512 \, sinesum 1024
512, f 62;
#X text 27 105 The below is in relation to array size (1027) and to
the "bounds" definitions in the message above:;
#X text 165 215 offset \; small step \; large step;
#X text 301 181 y-relative \, x1 \, x2;
#X text 321 224 x-relative \, y1 \, y2;
#X text 27 153 "xticks" \, "yticks";
#X text 296 153 "xlabel" \, "ylabel";
#X msg 380 384 \; indx-set 4 \;;
#X msg 33 384 \; indx-set 2 \;;
#X text 254 393 NEXT PAGE -->;
#X text 128 393 <-- PREV PAGE;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 6 0 1 0;
#X connect 7 0 1 0;
#X restore 37 167 pd beauty ___________________;
#N canvas 527 48 565 462 filling 0;
#X text 314 115 "sinesum") \, A_GIMME \, 0) \; "cosinesum") \, A_GIMME
\, 0) \; "normalize") \, A_DEFFLOAT \, 0) \;;
#X text 32 11 Click this first:;
#X msg 31 33 \; pd-sub clear \, arraydialog fillings 1027 4 0 \, map
0 \, map 1 \;, f 62;
#X msg 32 88 sinesum 1024 1;
#X obj 31 336 s fillings;
#X msg 42 115 cosinesum 1024 1 -1 -0.5 0.5;
#X text 60 146 To keep between -\$1 and \$1:;
#X msg 88 200 normalize \$1;
#X msg 88 169 0.5;
#X msg 130 168 1;
#X msg 170 169 2;
#X msg 113 268 using random;
#X msg 230 268 using noise;
#X text 96 239 You can also send in a list:;
#N canvas 528 51 610 468 info 0;
#X obj 59 152 until;
#X obj 59 175 random 200;
#X obj 59 200 - 100;
#X obj 59 225 * 0.01;
#X obj 59 250 list prepend;
#X obj 59 275 t a a;
#X obj 30 302 list;
#X obj 59 69 array size fillings;
#X obj 30 327 list prepend 0;
#X obj 30 16 inlet;
#X obj 30 352 outlet;
#X obj 30 40 t b b b;
#X obj 59 94 route float;
#X obj 59 120 sel;
#X text 195 218 Just random values betwen -1 and 1, f 18;
#X obj 403 188 switch~ 1024;
#X obj 405 214 noise~;
#X obj 403 19 inlet;
#X msg 443 72 \; pd dsp 1;
#X obj 405 280 del 1 1 samp;
#X obj 403 136 array size fillings;
#X msg 403 161 set \$1 \, bang;
#X obj 463 214 route bang set;
#X msg 405 306 \; fillings normalize \; pd dsp 0;
#X msg 212 391 vis 0;
#X text 264 392 <-- bang to close;
#X msg 362 226 0;
#X obj 405 245 tabwrite~;
#X msg 489 247 set fillings;
#X obj 403 44 t b b b;
#X obj 212 416 s pd-info;
#X connect 0 0 1 0;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 1;
#X connect 5 1 4 1;
#X connect 6 0 8 0;
#X connect 7 0 12 0;
#X connect 8 0 10 0;
#X connect 9 0 11 0;
#X connect 11 0 6 0;
#X connect 11 1 7 0;
#X connect 11 2 4 1;
#X connect 12 0 13 0;
#X connect 13 1 0 0;
#X connect 16 0 27 0;
#X connect 17 0 29 0;
#X connect 19 0 23 0;
#X connect 19 0 26 0;
#X connect 20 0 21 0;
#X connect 21 0 15 0;
#X connect 21 0 22 0;
#X connect 22 0 27 0;
#X connect 22 1 19 0;
#X connect 24 0 30 0;
#X connect 26 0 15 0;
#X connect 28 0 27 0;
#X connect 29 0 20 0;
#X connect 29 1 18 0;
#X connect 29 2 28 0;
#X restore 113 296 pd info random;
#X msg 380 384 \; indx-set 5 \;;
#X msg 33 384 \; indx-set 3 \;;
#X text 254 393 NEXT PAGE -->;
#X text 128 393 <-- PREV PAGE;
#X connect 3 0 4 0;
#X connect 5 0 4 0;
#X connect 7 0 4 0;
#X connect 8 0 7 0;
#X connect 9 0 7 0;
#X connect 10 0 7 0;
#X connect 11 0 14 0;
#X connect 12 0 14 1;
#X connect 14 0 4 0;
#X restore 37 191 pd filling __________________;
#N canvas 528 49 562 447 rename 0;
#X text 32 11 Click this first:;
#X obj 95 233 list;
#X text 314 200 "rename") \, A_SYMBOL \, 0) \;;
#X text 60 119 "rename" takes a symbol (it needs to be mapped after)
;
#X msg 95 273 \; \$1 rename \$2 \; pd-sub map 0 \, map 1;
#X msg 95 157 original renamed;
#X msg 106 191 renamed original;
#X msg 31 33 \; pd-sub clear \, arraydialog original 1027 4 0 \, map
0 \, map 1 \; original sinesum 1024 1 2 3 4 5 \, normalize, f 62;
#X msg 380 384 \; indx-set 6 \;;
#X msg 33 384 \; indx-set 4 \;;
#X text 254 393 NEXT PAGE -->;
#X text 128 393 <-- PREV PAGE;
#X connect 1 0 4 0;
#X connect 5 0 1 0;
#X connect 6 0 1 0;
#X restore 37 215 pd rename ___________________;
#N canvas 528 49 704 505 files 0;
#X text 398 15 Click this first:;
#X text 22 133 "write";
#X text 197 133 "read" (and replace);
#X msg 400 38 \; pd-sub clear \, arraydialog files-test 1027 4 0 \,
map 0 \, map 1 \; files-test sinesum 1024 22 4 33 2 5 \, normalize
, f 34;
#X text 25 50 This is exactly like data-structures (covered in pd-data-structures
\, later in this patch), f 38;
#X msg 399 254 \; files-test sinesum 1024 1 2 3 4 5 \, normalize,
f 34;
#X msg 399 197 \; files-test cosinesum 1024 55 44 12 56 5 \, normalize
, f 34;
#X text 408 340 "read") \, A_SYMBOL \, A_NULL) \; "write") \, A_SYMBOL
\, A_NULL) \; "print") \, A_NULL) \;;
#X text 397 158 Try putting these into files 2 \, 3:;
#X text 397 176 And "read" them afterwards...;
#X msg 28 349 print;
#X obj 28 378 s files-test;
#X text 18 324 "print" only posts to console;
#X msg 31 154 test1.txt;
#X msg 43 177 test2.txt;
#X msg 53 200 test3.txt;
#X text 59 243 See here:;
#X msg 206 154 test1.txt;
#X msg 218 177 test2.txt;
#X msg 228 200 test3.txt;
#X text 234 243 See here:;
#X text 24 16 Write / Read arrays into text files.;
#N canvas 0 22 474 354 info 0;
#X obj 48 14 inlet;
#X obj 48 87 symbol;
#X msg 242 124 bang;
#X obj 242 149 savepanel;
#X text 240 103 Another way is this:;
#X obj 242 174 makefilename %s.txt;
#X text 130 19 "write" takes a symbol like this: <full/path/to/filename.txt
>, f 35;
#X msg 48 112 add \$1;
#X obj 48 138 mainpath texts;
#X obj 48 163 list prepend write;
#X obj 48 188 list trim;
#X obj 48 217 s files-test;
#X msg 242 199 \; files-test write \$1;
#X msg 234 283 vis 0;
#X text 286 284 <-- bang to close;
#X obj 234 308 s pd-info;
#X connect 0 0 1 0;
#X connect 1 0 7 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 5 0 12 0;
#X connect 7 0 8 0;
#X connect 8 0 9 0;
#X connect 9 0 10 0;
#X connect 10 0 11 0;
#X connect 13 0 15 0;
#X restore 31 269 pd info write;
#N canvas 0 22 462 354 info 0;
#X obj 48 14 inlet;
#X obj 48 87 symbol;
#X msg 242 124 bang;
#X obj 242 149 savepanel;
#X text 240 103 Another way is this:;
#X obj 242 174 makefilename %s.txt;
#X msg 48 112 add \$1;
#X obj 48 138 mainpath texts;
#X obj 48 188 list trim;
#X obj 48 217 s files-test;
#X obj 48 163 list prepend read;
#X msg 242 199 \; files-test read \$1;
#X text 130 19 "read" takes a symbol like this: <full/path/to/filename.txt
>, f 35;
#X msg 234 283 vis 0;
#X text 286 284 <-- bang to close;
#X obj 234 308 s pd-info;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 2 0 3 0;
#X connect 3 0 5 0;
#X connect 5 0 11 0;
#X connect 6 0 7 0;
#X connect 7 0 10 0;
#X connect 8 0 9 0;
#X connect 10 0 8 0;
#X connect 13 0 15 0;
#X restore 206 269 pd info read;
#N canvas 526 50 700 496 info 0;
#X obj 31 151 symbol;
#X msg 31 176 add \$1;
#X obj 31 252 list trim;
#X obj 31 357 s;
#X obj 31 202 mainpath postscript;
#X obj 31 227 list prepend print;
#X msg 52 306 symbol pd-graph\$1;
#X msg 89 357 \; \$1 menu-open;
#X text 39 428 "print" takes a symbol like this: <full/path/to/filename.ps
>, f 33;
#X floatatom 279 110 5 1 999 0 - - -, f 5;
#X obj 258 177 f;
#X obj 258 202 t f f;
#X msg 373 236 bang;
#X text 279 20 If you know the name of the graph beforehand (i.e. \,
"graphINDEX") \, you can open it and print it like any other canvas:
, f 48;
#X msg 258 145 bang to find;
#X obj 31 125 r print-it;
#X obj 373 261 s print-it;
#X text 372 145 <-- [2] if it exists \, it will pop-up;
#X text 331 108 <-- [1] first \, set an index;
#X msg 87 150 symbol graph\$1.ps;
#X text 401 167 otherwise you'll get:;
#X text 418 190 "pd-graph5: no such object";
#X text 425 233 <-- [3] once found \, print;
#X obj 52 332 t a a;
#X msg 399 415 vis 0;
#X text 451 416 <-- bang to close;
#X obj 399 440 s pd-info;
#X text 34 32 This is sort of a hack -->;
#X text 343 326 [4] open the /postscript/ directory and find your graph
, f 35;
#X msg 87 399 menuclose;
#X connect 0 0 1 0;
#X connect 1 0 4 0;
#X connect 2 0 3 0;
#X connect 4 0 5 0;
#X connect 5 0 2 0;
#X connect 6 0 23 0;
#X connect 9 0 10 1;
#X connect 10 0 11 0;
#X connect 11 0 19 0;
#X connect 11 1 6 0;
#X connect 12 0 16 0;
#X connect 14 0 10 0;
#X connect 15 0 0 0;
#X connect 19 0 0 1;
#X connect 23 0 3 1;
#X connect 23 1 7 0;
#X connect 24 0 26 0;
#X connect 24 0 29 0;
#X connect 29 0 3 0;
#X restore 200 384 pd info print;
#X text 165 345 HOWEVER \, see this trick for printing graphs:, f
23;
#X msg 27 433 \; indx-set 5 \;;
#X text 128 444 <-- PREV PAGE;
#X text 291 442 END MINI TUTORIAL -->;
#X msg 472 416 \; allhide bang \; array-tutorial-end bang \;;
#X connect 10 0 11 0;
#X connect 13 0 22 0;
#X connect 14 0 22 0;
#X connect 15 0 22 0;
#X connect 17 0 23 0;
#X connect 18 0 23 0;
#X connect 19 0 23 0;
#X restore 37 239 pd files ____________________;
#N canvas 527 52 503 564 preset 0;
#X obj 14 149 r indx;
#X obj 14 174 sel 0 1 2 3 4 5 6;
#X obj 265 158 r allhide;
#X msg 265 183 dialog \, viewlist \, bounds \, beauty \, filling \,
rename \, files, f 24;
#X obj 265 238 symbol;
#X msg 265 263 \; pd-\$1 vis 0 \;;
#X msg 155 194 dialog;
#X msg 156 240 viewlist;
#X msg 158 334 files;
#X msg 158 311 rename;
#X msg 157 287 filling;
#X msg 157 263 beauty;
#X msg 156 217 bounds;
#X msg 16 377 \; allhide bang \; pd-\$1 vis 1 \;;
#X obj 16 352 symbol;
#X obj 14 19 r array-tutorial;
#X obj 16 438 r array-tutorial-end;
#X msg 16 463 \; pd-array vis 0 \; pd-sub vis 0 \, relocate 450x250+0+0
0x0+70+100 \, vis 1 \; pd-arrays vis 1 \;;
#X msg 14 44 \; pd-array vis 0 \, setbounds 20 50 320 425 \, vis 1
\; pd-sub vis 0 \, setbounds 20 475 520 690 \, vis 1 \; pd-more vis
0 \; pd-info vis 0 \; pd-preset vis 0 \;;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 1 1 12 0;
#X connect 1 2 7 0;
#X connect 1 3 11 0;
#X connect 1 4 10 0;
#X connect 1 5 9 0;
#X connect 1 6 8 0;
#X connect 2 0 3 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 6 0 14 0;
#X connect 7 0 14 0;
#X connect 8 0 14 0;
#X connect 9 0 14 0;
#X connect 10 0 14 0;
#X connect 11 0 14 0;
#X connect 12 0 14 0;
#X connect 14 0 13 0;
#X connect 15 0 18 0;
#X connect 16 0 17 0;
#X restore 79 333 pd preset arrays;
#X restore 426 608 pd array tutorial;
#X text 89 105 BUILT-IN GUI TO PUT ARRAYS;
#X text 179 133 <-- this opens the array menu.;
#X text 153 289 <-- NOTE: if 4th argument is 0 \, it is drawn in a
new graph;
#N canvas 528 54 487 324 more 0;
#X obj 63 260 array define foo;
#X msg 51 190 click 0 0 0 0 0;
#X msg 191 189 menuclose;
#X obj 180 68 tgl 15 0 empty menuopener empty 17 7 0 10 -262144 -1
-1 0 1;
#X obj 180 93 metro 1000;
#X obj 180 118 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 1
1;
#X obj 180 143 sel;
#X text 24 131 "click" opens it;
#X text 221 148 "menuclose" closes it;
#X text 200 66 <-- try this;
#X msg 341 254 \; pd-more vis 0 \; menuopener 0 \;;
#X text 44 25 You can use these messages to open the array:;
#X text 353 226 Close this:;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 6 0;
#X connect 6 0 1 0;
#X connect 6 1 2 0;
#X restore 426 533 pd more array clicking;
#N canvas 527 48 699 442 more 0;
#X obj 31 116 array define dog;
#X obj 32 142 array define cat;
#X msg 276 272 \; pd-graph2 vis 1;
#N canvas 0 22 450 278 (subpatch) 0;
#X array array-somename 100 float 3;
#A 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0
0;
#X coords 0 1 100 -1 200 140 1 0 0;
#X restore 31 195 graph;
#X msg 266 117 \; pd-graph1 rename thedog;
#X msg 267 164 \; pd-thedog vis 1;
#X msg 404 163 \; pd-thedog vis 0;
#X msg 270 210 \; pd-thedog vis 0 \, setbounds 0 22 400 400 \, vis
1;
#X text 410 284 <-- the cat;
#X msg 522 276 \; pd-graph2 vis 0;
#X text 237 130 1;
#X text 239 176 2;
#X text 246 220 3;
#X text 248 281 4;
#X text 64 340 ^^ No way to open this unless right-click > open, f
21;
#X msg 532 378 \; pd-more vis 0 \;;
#X text 529 350 Close this;
#X text 35 13 Every time you create an [array define myname] object
there is a canvas named pd-graphX (created by array_define_new). If
you know the order of creation of the array \, you can send [ \; pd-graph1
vis 1( \, and (probably) any other message you send to canvases. You
can even rename it: [ \; pd-graph1 rename dog( \, and then just send
[ \; pd-dog vis 1( \; The name won't stick \, though \, on next load.
, f 77;
#X restore 426 583 pd more array naming;
#N canvas 524 52 727 453 more 0;
#X obj 41 383 s pd-sub;
#X obj 600 327 s pd-sub;
#X msg 555 246 key 1 Up 1;
#X msg 501 274 key 1 Left 1;
#X msg 543 300 key 1 Down 1;
#X msg 609 274 key 1 Right 1;
#X msg 511 21 menu-open;
#X msg 533 48 menuclose;
#X obj 512 142 s;
#X msg 543 142 symbol pd-graph\$1;
#X text 540 75 choose one:;
#X text 64 236 the old [table] object;
#X obj 553 94 hradio 15 1 0 8 empty empty empty 0 -8 0 10 -262144 -1
-1 1;
#X obj 553 114 + 1;
#X text 99 286 the new array suite;
#X text 44 218 (also named with graph+index);
#X msg 67 255 obj 10 160 table;
#X msg 94 334 obj 10 190 array define newarray;
#X text 38 28 Finding graphed arrays doesn't seem to work., f 45;
#X text 39 52 When an array is placed with [menuarray( or from the
Put>Array menu \, Pd creates a subcanvas named 'graph' + index number
(starting with 1)., f 48;
#X text 480 181 If placed with [menuarray( it is automatically selected
so you can move it:, f 27;
#X text 94 306 (also named with graph+index);
#X msg 472 386 vis 0;
#X obj 472 411 s pd-more;
#X text 524 386 <-- bang to close;
#X msg 41 112 \; pd-sub menu-open \, map 0 \, map 1;
#X msg 300 111 \; pd-sub clear;
#X floatatom 634 116 5 0 0 0 - - -, f 5;
#X msg 31 177 menuarray;
#X connect 2 0 1 0;
#X connect 3 0 1 0;
#X connect 4 0 1 0;
#X connect 5 0 1 0;
#X connect 6 0 8 0;
#X connect 7 0 8 0;
#X connect 9 0 8 1;
#X connect 12 0 13 0;
#X connect 13 0 9 0;
#X connect 16 0 0 0;
#X connect 17 0 0 0;
#X connect 22 0 23 0;
#X connect 27 0 9 0;
#X connect 28 0 0 0;
#X restore 426 558 pd more array finding;
#X connect 0 0 15 0;
#X connect 1 0 16 0;
#X connect 3 0 16 0;
#X connect 4 0 5 0;
#X connect 6 0 7 0;
#X connect 8 0 9 0;
#X connect 12 0 2 0;
#X connect 24 0 2 0;
#X connect 25 0 26 0;
#X connect 26 0 2 0;
#X connect 27 0 26 0;
#X restore 23 111 pd arrays ________;
#N canvas 525 50 725 640 menu-messages 0;
#X msg 32 76 menufont;
#X msg 73 230 menusave;
#X msg 92 263 menusaveas;
#X obj 35 426 s pd-helpfiles.pd;
#X msg 113 343 menuclose;
#X msg 45 123 10;
#X msg 124 124 12;
#X msg 45 150 font \$1 100 0;
#X msg 85 123 16;
#X obj 644 571 bng 15 250 50 0 empty empty next->> 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 next 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-menu-messages vis 0 \; pd-pd-messages vis 0 \, setbounds
525 50 1250 690 \, vis 1 \; gop 2 \; pd-helpfiles.pd map 0 \, map 1
\; pd-sub menuclose \; pd-next vis 0 \;;
#X connect 0 0 1 0;
#X restore 644 591 pd next;
#X obj 27 572 bng 15 250 50 0 empty empty <<-prev 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 prev 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-menu-messages vis 0 \; pd-data-structures vis 0
\, setbounds 525 50 1250 690 \, vis 1 \; pd-prev vis 0 \;;
#X connect 0 0 1 0;
#X restore 27 592 pd prev;
#X obj 318 596 hradio 15 1 0 3 gop empty gop 0 -8 0 10 -262144 -1 -1
2;
#X text 120 76 <-- font dialog (won't affect fonts in abstractions)
;
#X text 163 147 <-- "font" message takes three floats:;
#X text 156 232 <-- "menusave" saves in current directory;
#X text 191 262 <-- "menusaveas" prompts the environment's save-as
menu;
#X text 482 130 pre-defined size \; stretch percentage \; x-y || x
|| y;
#X text 223 166 (aka: what is returned from the menufont fialog),
f 28;
#X text 200 343 <-- "menuclose";
#X text 168 367 WARNING: it will close the main patch.;
#X obj 113 392 spigot;
#X obj 150 370 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 126 481 In general \, abstractions and subpatches take all
messages so far. The next section includes pd-related messages.;
#X text 81 25 Menu-messages act more globally than messages to subpatches:
;
#X connect 0 0 3 0;
#X connect 1 0 3 0;
#X connect 2 0 3 0;
#X connect 4 0 22 0;
#X connect 5 0 7 0;
#X connect 6 0 7 0;
#X connect 7 0 3 0;
#X connect 8 0 7 0;
#X connect 9 0 10 0;
#X connect 11 0 12 0;
#X connect 22 0 3 0;
#X connect 23 0 22 1;
#X restore 23 165 pd menu-messages _;
#N canvas 525 50 725 640 pd-messages 0;
#X obj 644 571 bng 15 250 50 0 empty empty next->> 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 next 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-pd-messages vis 0 \; pd-more-graphing vis 0 \, setbounds
525 50 1250 690 \, vis 1 \; pd-next vis 0 \;;
#X connect 0 0 1 0;
#X restore 644 591 pd next;
#X obj 27 572 bng 15 250 50 0 empty empty <<-prev 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 prev 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-pd-messages vis 0 \; pd-menu-messages vis 0 \, setbounds
525 50 1250 690 \, vis 1 \; pd-prev vis 0 \;;
#X connect 0 0 1 0;
#X restore 27 592 pd prev;
#X obj 318 596 hradio 15 1 0 3 gop empty gop 0 -8 0 10 -262144 -1 -1
2;
#N canvas 526 49 450 300 more 0;
#X msg 161 84 verifyquit;
#X msg 182 120 quit;
#X obj 161 166 s pd;
#X text 86 46 These will quit pd altogether:;
#X connect 0 0 2 0;
#X connect 1 0 2 0;
#X restore 433 526 pd more quitting;
#X obj 282 39 r pd;
#N canvas 526 50 604 533 more 0;
#X text 42 58 "menunew";
#X text 38 342 "open";
#X text 137 83 <-- [1] start a new patch;
#X msg 326 467 vis 0;
#X obj 326 492 s pd-more;
#X text 376 467 <-- bang to close;
#X text 43 18 CREATING A NEW SET OF PATCHES USING MESSAGES;
#X text 78 172 See here:;
#N canvas 0 22 474 354 info 0;
#X obj 48 14 inlet;
#X obj 48 87 symbol;
#X msg 234 283 vis 0;
#X text 286 284 <-- bang to close;
#X obj 234 308 s pd-info;
#X text 127 30 "menunew" takes a symbol and a path like this:, f 37
;
#X msg 48 132 prepend \$1;
#X msg 48 223 menunew \$1 \$2;
#X text 132 74 open filename.pd <full/path/to>;
#X obj 48 277 s pd;
#X obj 48 178 mainpath abstractions;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 2 0 4 0;
#X connect 6 0 10 0;
#X connect 7 0 9 0;
#X connect 10 0 7 0;
#X restore 50 198 pd info menunew;
#X text 79 457 See here:;
#N canvas 0 22 474 354 info 0;
#X obj 48 14 inlet;
#X obj 48 87 symbol;
#X msg 234 283 vis 0;
#X text 286 284 <-- bang to close;
#X obj 234 308 s pd-info;
#X text 132 74 open filename.pd <full/path/to>;
#X msg 48 132 prepend \$1;
#X msg 48 223 open \$1 \$2;
#X text 127 30 "open" takes a symbol and a path like this:, f 37;
#X obj 48 277 s pd;
#X obj 48 178 mainpath abstractions;
#X connect 0 0 1 0;
#X connect 1 0 6 0;
#X connect 2 0 4 0;
#X connect 6 0 10 0;
#X connect 7 0 9 0;
#X connect 10 0 7 0;
#X restore 51 483 pd info open;
#X obj 308 209 symbol;
#X msg 308 234 \; pd-\$1 menusave;
#X msg 50 83 test1.pd;
#X msg 62 106 test2.pd;
#X msg 72 129 test3.pd;
#X msg 51 368 test1.pd;
#X msg 308 131 test1.pd;
#X msg 63 391 test2.pd;
#X msg 320 154 test2.pd;
#X msg 73 414 test3.pd;
#X msg 330 177 test3.pd;
#X obj 308 359 symbol;
#X msg 308 281 test1.pd;
#X msg 320 304 test2.pd;
#X msg 330 327 test3.pd;
#X msg 308 384 \; pd-\$1 menuclose;
#X text 161 279 [4] close it -->;
#X text 127 367 <-- [5] open it;
#X text 169 126 [3] save it -->;
#N canvas 465 34 674 581 info 0;
#X obj 51 12 inlet;
#X obj 51 139 + 20;
#X msg 493 275 clear;
#X obj 166 222 random 30, f 6;
#X obj 166 315 + 60;
#X obj 166 340 mtof;
#X obj 83 254 sel 0 1 2;
#X msg 83 286 phasor~;
#X msg 83 309 osc~;
#X msg 83 332 noise~;
#X obj 83 228 random 3;
#X obj 83 360 list;
#X obj 51 86 t f f;
#X obj 89 169 sel 0 1 2;
#X obj 51 418 list;
#X obj 392 547 s;
#X obj 236 251 / 100;
#X obj 236 276 + 0.1;
#X obj 352 252 random 2;
#X obj 352 277 + 1;
#X msg 352 341 list dac~ \$1;
#X msg 51 61 0 \, 1 \, 2;
#X obj 51 37 t b b a;
#X msg 465 500 vis 0;
#X obj 465 525 s pd-info;
#X text 515 499 <-- bang to close;
#X obj 549 273 makefilename pd-%s, f 12;
#X obj 51 496 list trim;
#X obj 51 471 list prepend obj 20;
#X msg 236 341 list *~ \$1;
#X obj 51 114 * 25;
#X obj 500 209 t b a;
#X msg 185 429 sort \, connect 0 0 1 0 \, connect 1 0 2 0 \, connect
2 0 3 0;
#X obj 236 226 random 20;
#X connect 0 0 22 0;
#X connect 1 0 14 0;
#X connect 2 0 15 0;
#X connect 3 0 4 0;
#X connect 4 0 5 0;
#X connect 5 0 11 1;
#X connect 6 0 3 0;
#X connect 6 0 7 0;
#X connect 6 1 3 0;
#X connect 6 1 8 0;
#X connect 6 2 11 1;
#X connect 6 2 9 0;
#X connect 7 0 11 0;
#X connect 8 0 11 0;
#X connect 9 0 11 0;
#X connect 10 0 6 0;
#X connect 11 0 14 1;
#X connect 12 0 30 0;
#X connect 12 1 13 0;
#X connect 13 0 10 0;
#X connect 13 1 33 0;
#X connect 13 2 18 0;
#X connect 14 0 28 0;
#X connect 16 0 17 0;
#X connect 17 0 29 0;
#X connect 18 0 19 0;
#X connect 19 0 20 0;
#X connect 20 0 14 1;
#X connect 21 0 12 0;
#X connect 22 0 32 0;
#X connect 22 1 21 0;
#X connect 22 2 31 0;
#X connect 23 0 24 0;
#X connect 26 0 15 1;
#X connect 27 0 15 0;
#X connect 28 0 27 0;
#X connect 29 0 14 1;
#X connect 30 0 1 0;
#X connect 31 0 2 0;
#X connect 31 1 26 0;
#X connect 32 0 15 0;
#X connect 33 0 16 0;
#X restore 441 214 pd info putting;
#X obj 441 189 symbol;
#X msg 441 111 test1.pd;
#X msg 453 134 test2.pd;
#X msg 463 157 test3.pd;
#X text 169 105 [2] put something in it ------->;
#X text 150 324 [repeat];
#X msg 426 12 dsp 1;
#X obj 426 37 s pd;
#X msg 489 17 dsp 0;
#X connect 3 0 4 0;
#X connect 11 0 12 0;
#X connect 13 0 8 0;
#X connect 14 0 8 0;
#X connect 15 0 8 0;
#X connect 16 0 10 0;
#X connect 17 0 11 0;
#X connect 18 0 10 0;
#X connect 19 0 11 0;
#X connect 20 0 10 0;
#X connect 21 0 11 0;
#X connect 22 0 26 0;
#X connect 23 0 22 0;
#X connect 24 0 22 0;
#X connect 25 0 22 0;
#X connect 31 0 30 0;
#X connect 32 0 31 0;
#X connect 33 0 31 0;
#X connect 34 0 31 0;
#X connect 37 0 38 0;
#X connect 39 0 38 0;
#X restore 433 501 pd more patch-creation;
#X obj 282 91 spigot;
#X obj 355 47 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 282 139 print -n;
#X obj 108 411 s pd;
#X msg 109 442 save-preferences;
#X obj 109 467 s pd;
#X msg 108 385 path-dialog 1 1 +/Users/federicocamarahalac/Documents/fd_lib
;
#X text 110 184 This will print all messages sent to the pd-selector.
For example: if you click "start-path-dialog" and make some changes
on the pop-up window \, you will see a message like this:;
#X text 102 333 "save-preferences";
#X text 103 317 "path-dialog 0 0 +/path/to/your/favorite/lib";
#X msg 239 265 start-path-dialog;
#X obj 239 290 s pd;
#X text 106 365 You can use these last messages \, and send them back
to pd:;
#N canvas 527 50 725 352 more 0;
#X obj 14 259 s pd;
#X msg 14 70 start-path-dialog;
#X msg 26 102 start-startup-dialog;
#X msg 51 133 audio-properties;
#X msg 75 162 midi-properties;
#X msg 108 205 dsp 1;
#X msg 107 233 dsp 0;
#X msg 246 133 audio-dialog 0 0 0 0 8 0 0 0 0 0 0 0 8 0 0 0 44100 5
0 64;
#X text 200 68 --->;
#X text 201 133 --->;
#X msg 246 162 midi-dialog 1 0 0 0 0 0 0 0 0 2 0 0 0 0 0 0 0 0 4 4
;
#X text 202 161 --->;
#X text 200 98 --->;
#X msg 245 100 startup-dialog 0 +Gem +/your/path;
#X msg 245 70 path-dialog 1 1 +/your/path/to/lib;
#X msg 494 281 vis 0;
#X obj 494 306 s pd-more;
#X text 544 281 <-- bang to close;
#X text 108 26 SOME PD PROPERTIES I COULD FIND;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X connect 3 0 0 0;
#X connect 4 0 0 0;
#X connect 5 0 0 0;
#X connect 6 0 0 0;
#X connect 15 0 16 0;
#X restore 433 478 pd more properties;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 6 0 8 0;
#X connect 8 0 10 0;
#X connect 9 0 8 1;
#X connect 12 0 13 0;
#X connect 14 0 11 0;
#X connect 18 0 19 0;
#X restore 23 190 pd pd-messages ___;
#N canvas 525 50 725 640 more-graphing 0;
#X obj 644 571 bng 15 250 50 0 empty empty next->> 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 next 0;
#X obj 25 13 inlet;
#X msg 25 38 \; killflies 0 \; pd-more-graphing vis 0 \; pd-creator
vis 0 \, setbounds 525 50 1250 690 \, vis 1 \; pd-next vis 0 \;;
#X connect 0 0 1 0;
#X restore 644 591 pd next;
#X obj 27 572 bng 15 250 50 0 empty empty <<-prev 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 prev 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-more-graphing vis 0 \; pd-pd-messages vis 0 \, setbounds
525 50 1250 690 \, vis 1 \; pd-prev vis 0 \;;
#X connect 0 0 1 0;
#X restore 27 592 pd prev;
#X obj 644 571 bng 15 250 50 0 empty empty next->> 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 next 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-data-structures vis 0 \; pd-menu-messages vis 0
\, setbounds 512 50 1250 1050 \, vis 1 \; pd-next vis 0 \;;
#X connect 0 0 1 0;
#X restore 644 591 pd next;
#X obj 27 572 bng 15 250 50 0 empty empty <<-prev 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 prev 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-data-structures vis 0 \; pd-arrays vis 0 \, setbounds
512 50 1250 1050 \, vis 1 \; pd-next vis 0 \;;
#X connect 0 0 1 0;
#X restore 27 592 pd prev;
#X obj 296 71 hradio 15 1 0 3 gop empty gop 0 -8 0 10 -262144 -1 -1
2;
#X text 27 18 A BUNCH OF FLIES;
#N canvas 0 22 556 276 more 0;
#X obj 35 96 drawcurve 0 1 -3 -1 -1 1 1 2 x(0:100)(0:10) -2 -2 -2 2
y(0:100)(0:10) 1 0 3 2 x(0:100)(0:10) y(0:100)(0:10) 1 2 3 1 2 1 3
-2 -3 1 x(0:100)(0:10) -1 3 -2 -1, f 36;
#X text 350 120 <-- Ok \, not even close to a fly \, more like a flying
snail..., f 22;
#X obj 35 62 struct templ-1 float x float y float vis;
#X obj 36 209 drawnumber -v vis x 5 -4 0 fly=;
#X text 36 16 this is the template. If you delete or change this \,
pd will most likely crash or it will crash on its way out.;
#X restore 171 18 pd more flies template;
#N canvas 526 50 428 369 more 0;
#X obj 60 286 pointer;
#X msg 81 256 next;
#X msg 133 116 clear;
#X obj 134 178 s pd-sub;
#X msg 115 144 scalar templ-1 50 50;
#X msg 60 229 traverse pd-sub \, next;
#X obj 60 311 list prepend 0;
#X obj 60 176 t f f;
#X obj 60 202 sel;
#X msg 61 82 0 \, 1 \, 2 \, 3 \, 4 \, 5 \, 6 \, 7;
#X obj 61 107 t f b;
#X msg 179 55 0 \, 1 \, 2 \, 3 \, 4 \, 5 \, 6 \, 7;
#X obj 130 53 t b b;
#X obj 60 11 inlet;
#X obj 129 13 inlet;
#X obj 60 336 outlet;
#X msg 266 278 vis 0;
#X obj 266 303 s pd-more;
#X obj 307 166 s numvis;
#X msg 307 132 0;
#X obj 60 56 t b b;
#X connect 0 0 6 0;
#X connect 1 0 0 0;
#X connect 2 0 3 0;
#X connect 4 0 3 0;
#X connect 5 0 0 0;
#X connect 6 0 15 0;
#X connect 7 0 8 0;
#X connect 7 1 6 1;
#X connect 8 0 5 0;
#X connect 8 1 1 0;
#X connect 9 0 10 0;
#X connect 10 0 7 0;
#X connect 10 1 4 0;
#X connect 11 0 7 0;
#X connect 12 0 2 0;
#X connect 12 1 11 0;
#X connect 13 0 20 0;
#X connect 14 0 12 0;
#X connect 16 0 17 0;
#X connect 19 0 18 0;
#X connect 20 0 9 0;
#X connect 20 1 19 0;
#X restore 51 164 pd more flies;
#X obj 51 62 tgl 50 0 empty killflies on/off 60 25 0 20 -24198 -1 -1
0 1;
#X obj 51 124 sel 1 0;
#X obj 51 204 clone _fly 8;
#X obj 187 178 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 187 198 s numvis;
#X msg 298 100 \; pd-sub menu-open;
#X msg 297 141 \; pd-sub menuclose;
#X msg 370 333 -1 1;
#X msg 369 294 -1 -1;
#X msg 302 295 1 -1;
#X msg 304 331 1 1;
#X msg 429 293 2 -2;
#X msg 431 329 2 2;
#X msg 484 292 -2 -2;
#X msg 484 331 -2 2;
#X msg 103 294 0.25 -0.25;
#X msg 105 330 0.25 0.25;
#X msg 196 332 -0.25 0.25;
#X msg 195 293 -0.25 -0.25;
#X msg 124 409 \; pd-sub menuclose \, donecanvasdialog \$1 \$2 0 0
0 0 0 0 0 0 0 \, menu-open;
#X obj 124 374 t a;
#X obj 321 372 t a;
#X obj 443 373 t a;
#X text 125 476 NOTE: when non-GOP \, only arguments 1-3 matter.;
#X msg 550 320 5 -5;
#X msg 560 347 10 -10;
#X text 545 296 really tiny:;
#X msg 24 313 0.1 -0.1;
#X text 28 293 huge:;
#X text 28 246 xperpix and yperpix combinations: they determine canvas
orientation and scale, f 80;
#X text 105 270 4 pixels per point;
#X text 334 271 1:1;
#X text 423 271 half a pixel...;
#X connect 0 0 1 0;
#X connect 2 0 3 0;
#X connect 4 0 5 0;
#X connect 6 0 7 0;
#X connect 11 0 14 0;
#X connect 12 0 13 0;
#X connect 13 0 11 0;
#X connect 13 1 11 1;
#X connect 15 0 16 0;
#X connect 19 0 33 0;
#X connect 20 0 33 0;
#X connect 21 0 33 0;
#X connect 22 0 33 0;
#X connect 23 0 34 0;
#X connect 24 0 34 0;
#X connect 25 0 34 0;
#X connect 26 0 34 0;
#X connect 27 0 32 0;
#X connect 28 0 32 0;
#X connect 29 0 32 0;
#X connect 30 0 32 0;
#X connect 32 0 31 0;
#X connect 33 0 31 0;
#X connect 34 0 31 0;
#X connect 36 0 34 0;
#X connect 37 0 34 0;
#X connect 39 0 32 0;
#X restore 23 215 pd more-graphing _;
#N canvas 525 50 725 640 creator 1;
#X obj 27 572 bng 15 250 50 0 empty empty <<-prev 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 prev 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-creator vis 0 \; pd-more-graphing vis 0 \, setbounds
525 50 1250 690 \, vis 1 \; pd-prev vis 0 \;;
#X connect 0 0 1 0;
#X restore 27 592 pd prev;
#X obj 318 596 hradio 15 1 0 3 gop empty gop 0 -8 0 10 -262144 -1 -1
2;
#X obj 644 571 bng 15 250 50 0 empty empty next->> 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 next 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-creator vis 0 \; pd-goodbye vis 0 \, setbounds 525
50 1250 690 \, vis 1 \; pd-sub menuclose \; pd-next vis 0 \;;
#X connect 0 0 1 0;
#X restore 644 591 pd next;
#X obj 644 571 bng 15 250 50 0 empty empty next->> 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 next 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-data-structures vis 0 \; pd-menu-messages vis 0
\, setbounds 512 50 1250 1050 \, vis 1 \; pd-next vis 0 \;;
#X connect 0 0 1 0;
#X restore 644 591 pd next;
#X text 224 218 This is still on the workings...;
#X connect 0 0 1 0;
#X connect 3 0 4 0;
#X connect 5 0 6 0;
#X restore 23 240 pd creator _______;
#N canvas 525 50 725 640 goodbye 0;
#X text 111 133 And a nice data-structure tutorial by Frank Barknecht
;
#X obj 27 572 bng 15 250 50 0 empty empty <<-prev 17 7 0 10 -24198
-262144 -1;
#N canvas 0 22 527 188 prev 0;
#X obj 25 13 inlet;
#X msg 25 38 \; pd-goodbye vis 0 \; pd-creator vis 0 \, setbounds 525
50 1250 690 \, vis 1 \; pd-prev vis 0 \;;
#X connect 0 0 1 0;
#X restore 27 592 pd prev;
#X obj 637 595 bng 15 250 50 0 close empty close 17 7 0 10 -258699
-1 -1;
#N canvas 561 273 450 300 more 0;
#X msg 41 26 protectmode \$1;
#X msg 42 49 radio;
#X msg 42 72 help 1 1;
#X msg 43 95 properties;
#X msg 43 117 atom;
#X msg 43 139 intatom;
#X obj 43 164 s pd-sub;
#X connect 0 0 6 0;
#X connect 1 0 6 0;
#X connect 2 0 6 0;
#X connect 3 0 6 0;
#X connect 4 0 6 0;
#X connect 5 0 6 0;
#X restore 336 409 pd more no-method;
#N canvas 729 116 450 300 more 0;
#X obj 40 95 s pd-sub;
#X msg 39 66 pop 1;
#X connect 1 0 0 0;
#X restore 335 433 pd more error;
#N canvas 732 418 450 300 more 0;
#X msg 19 67 restore 246 63 pd this 1;
#X msg 29 103 vis 0 \, undo \, vis 1;
#X msg 29 123 vis 0 \, redo \, vis 1;
#X msg 54 154 texteditor;
#X obj 68 206 s pd-sub;
#X restore 335 456 pd more crash;
#N canvas 593 289 586 296 more 0;
#X obj 24 209 s pd-sub;
#X msg 33 32 array 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19
20 21 22, f 62;
#X msg 56 92 saveto helpfiles2.pd /Users/federicocamarahalac/Documents/fd_work/dynamic-patching
;
#X connect 1 0 0 0;
#X connect 2 0 0 0;
#X restore 335 480 pd more bad-arguments;
#N canvas 700 22 514 447 more 0;
#X text 105 176 weird response:;
#X msg 280 73 findparent;
#X obj 79 233 s pd-sub;
#X msg 163 244 motion 200 100 0;
#X msg 163 284 motion 200 100 2;
#X msg 163 264 motion 200 100 1;
#X msg 273 160 obj 200 100 bng;
#X msg 273 181 obj 180 80 bng;
#X msg 163 224 motion 240 100 -1;
#X msg 163 315 mouse 240 100 1 1;
#X msg 73 44 mouseup 240 100 1;
#X msg 83 78 click 240 100 1 1 1;
#X msg 143 398 motion 200 100 2 1;
#X msg 104 118 done-popup 1 10 10;
#X obj 43 298 s pd;
#X connect 3 0 2 0;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 6 0 2 0;
#X connect 7 0 2 0;
#X connect 8 0 2 0;
#X connect 9 0 2 0;
#X connect 10 0 2 0;
#X connect 11 0 2 0;
#X connect 12 0 2 0;
#X connect 13 0 2 0;
#X restore 335 504 pd more no-response;
#N canvas 709 60 450 300 more 0;
#X text 47 11 Another way to stack subcanvases:, f 13;
#X obj 53 149 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 53 169 vis \$1;
#X obj 53 212 s;
#X obj 86 149 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 86 192 symbol pd-sub\$1;
#X symbolatom 86 215 10 0 0 0 - - -, f 10;
#N canvas 241 318 450 300 sub0 0;
#X obj 29 16 inlet;
#X obj 29 41 print sub0;
#X connect 0 0 1 0;
#X restore 53 70 pd sub0 \; sub1 \;;
#X msg 218 123 \; pd-sub1 vis 1;
#X msg 189 73 \; pd-sub0 vis 1;
#X text 146 88 ??;
#X connect 1 0 2 0;
#X connect 2 0 3 0;
#X connect 4 0 5 0;
#X connect 5 0 3 1;
#X connect 5 0 6 0;
#X restore 335 528 pd more stack-canvases;
#X text 128 214 Also \, iemguts is really convenient for canvas-related
stuff;
#X text 77 50 For more info \, here's a list of all pd-messages and
a tutorial (Pd-0.34) by Damien Henry:;
#X text 100 443 Here are stuff I could not figure out. Any help is
more than welcomed:, f 24;
#X text 198 582 fdch.github.io/tv || fch226 at nyu dot edu;
#X text 182 327 <-- just using [ggee/shell] to go to the links... you
can copy-paste them on your browser if this doesn't work., f 50;
#X obj 84 281 symbol;
#X msg 84 306 open \$1;
#X obj 84 331 ggee/shell;
#X msg 140 243 https://git.iem.at/pd;
#X msg 120 158 http://puredata.info/community/conventions/convention04/lectures/tk-barknecht
;
#X msg 83 90 http://puredata.info/community/pdwiki/PdInternalMessages/
;
#X text 86 380 ______________________________________________________________________
, f 70;
#X text 86 546 ______________________________________________________________________
, f 70;
#X text 80 22 ______________________________________________________________________
, f 70;
#X connect 1 0 2 0;
#X connect 15 0 16 0;
#X connect 16 0 17 0;
#X connect 18 0 15 0;
#X connect 19 0 15 0;
#X connect 20 0 15 0;
#X restore 23 265 pd goodbye _______;
#X restore 217 175 pd menu;
#X obj 363 175 bng 15 250 50 0 close empty close 17 7 0 10 -258699
-1 -1;
#X text 217 34 This patch contains detailed information about pd-messages
(that I could find going through 'g_*.c') which relate to canvases
and gui interaction., f 32;
#X text 217 120 Click "start-here" \, then use the "prev" and "next"
buttons to navigate through the "menu"., f 32;
#X obj 425 175 bng 15 250 50 0 quit empty quit 17 7 0 10 -66577 -1
-1;
#X obj 217 8 fd_title 1 PD MESSAGES;
