#N canvas 523 50 735 451 12;
#X obj 30 165 t f f;
#X obj 30 361 line;
#X obj 30 131 f \$1;
#X obj 30 56 inlet;
#X msg 30 330 \$1 \, \$2 \$3;
#X obj 30 94 t b a;
#X obj 30 203 array get \$2 \$1 1;
#X obj 68 237 array get \$2 \$1 1;
#X obj 30 391 array set \$2 \$1;
#X obj 30 299 pack f f f;
#X msg 342 237 all array1 array2 1000;
#X text 287 363 name your arrays as you wish and place them outside
this abstraction, f 40;
#X obj 92 86 list split 2;
#X obj 92 110 list split 1;
#X obj 92 156 symbol;
#X obj 191 197 symbol;
#X obj 92 132 list trim;
#X obj 191 163 list trim;
#X text 236 55 NOTE: NEEDS TO BE CLONED OTHERWISE WONT MAKE SENSE...
;
#X text 298 192 to make it work \, you need to;
#X text 305 210 send a message like this to the clone inlet:;
#X text 338 268 1) the 'all' is a must (see clone-help.pd);
#X text 338 327 4) 1000 == time in milliseconds;
#X text 308 81 [clone fd_arraymorph SIZE TARGET];
#X text 380 126 \$1 == SIZE: of arrays (float);
#X text 29 14 MORPH between two arrays (array1 \, array2) in a recipient
(array3), f 65;
#X text 381 146 \$2 == RECIPIENT: arrayname (symbol);
#X text 338 308 3) array2 == target curve;
#X text 338 288 2) array1 == source curve;
#X text 231 41 ********************************************************
;
#X text 231 103 ********************************************************
;
#X text 479 414 see fd_arraymorph-help.pd;
#X connect 0 0 6 0;
#X connect 0 1 7 0;
#X connect 1 0 8 0;
#X connect 2 0 0 0;
#X connect 3 0 5 0;
#X connect 4 0 1 0;
#X connect 5 0 2 0;
#X connect 5 1 12 0;
#X connect 6 0 9 0;
#X connect 7 0 9 1;
#X connect 9 0 4 0;
#X connect 12 0 13 0;
#X connect 12 1 9 2;
#X connect 13 0 16 0;
#X connect 13 1 17 0;
#X connect 14 0 6 2;
#X connect 15 0 7 2;
#X connect 16 0 14 0;
#X connect 17 0 15 0;
