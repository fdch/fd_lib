#N canvas 526 49 551 557 12;
#X msg 50 130 bang;
#X msg 111 336 symbol ..;
#X obj 50 411 mainpath;
#X msg 136 361 symbol ../..;
#X text 94 130 <-- Outputs the current directory (symbol);
#X msg 146 388 symbol subdir/inside/another/subdirectory;
#X msg 64 169 add myfile.ps;
#X msg 78 200 prepend myfile.wav;
#X msg 81 234 append myfile.txt;
#X text 174 169 <-- "add" a filename to the end (symbol);
#X text 234 199 <-- "prepend" a filename (list);
#X text 228 233 <-- "appends" a filename (list);
#X text 58 54 (like [ggee/getdir] and [tof/path] \, but with a twist)
, f 54;
#N canvas 541 191 565 498 file 0;
#X obj 33 286 mainpath;
#X msg 33 83 getfiles;
#X text 113 82 <-- Outputs all files in current directory;
#X msg 43 117 getpdfiles;
#X text 135 114 <-- Outputs all ".pd" files in current directory,
f 38;
#X text 53 32 Some utilities to get files in the current or given directory
;
#X obj 33 449 print file;
#X msg 55 186 open ../88.jpg;
#X text 52 164 Here we change directory and open an image:;
#X text 157 452 used in "navigator.pd" and "fd_getfiles-help.pd";
#X msg 83 237 bang;
#X text 127 239 <-- Note that unless you send a symbol via cold inlet
or abstraction \, the directory will not change., f 47;
#X text 83 11 FILE STUFF: (get files \, pd-files \, open);
#X obj 274 380 mainpath ..;
#X msg 274 303 getfiles;
#X msg 291 344 getpdfiles;
#X text 206 185 <-- outputs a bang if successfull and then opens a
specified file in its default app, f 38;
#X connect 0 0 6 0;
#X connect 1 0 0 0;
#X connect 3 0 0 0;
#X connect 7 0 0 0;
#X connect 10 0 0 0;
#X connect 13 0 6 0;
#X connect 14 0 13 0;
#X connect 15 0 13 0;
#X restore 205 474 pd file stuff;
#X text 222 14 "mainpath";
#X text 240 362 <-- goes back two directories;
#X text 196 336 <-- goes back one directory;
#N canvas 0 22 450 300 erratum 0;
#X text 36 57 NOTE: Compiled for mac \, don't know if it will work
in linux or windows. It is simply "canvas_getcurrentdir()" with some
twists. It also uses <dirent.h>, f 40;
#X restore 408 501 pd erratum;
#X text 105 293 Cold inlet / Argument --> relative directory:;
#N canvas 0 22 450 300 argument 0;
#X msg 125 69 bang;
#X obj 125 135 print -n;
#X obj 125 103 mainpath subdir;
#X text 91 48 Optional argument:;
#X connect 0 0 2 0;
#X connect 2 0 1 0;
#X restore 206 502 pd argument;
#X text 83 36 handles path relative to the containing patch.;
#X text 207 445 See here:;
#X obj 50 436 print -n;
#X msg 97 263 reset;
#X text 148 265 <-- removes stored relative directories;
#X text 103 313 Use 'bang' \, 'add' or 'prepend' after these:;
#X text 59 89 PATH STUFF: (to use 'read' \, 'open' \, 'write' \, 'print')
;
#X connect 0 0 2 0;
#X connect 1 0 2 1;
#X connect 2 0 22 0;
#X connect 3 0 2 1;
#X connect 5 0 2 1;
#X connect 6 0 2 0;
#X connect 7 0 2 0;
#X connect 8 0 2 0;
#X connect 23 0 2 0;
