#N struct fd_itpoint-tmpl1 float x float y;
#N canvas 525 52 577 543 12;
#X text 46 42 Traverse and iterate through objects in a template;
#N canvas 42 474 194 184 this1 1;
#X scalar fd_itpoint-tmpl1 50 50 \;;
#X scalar fd_itpoint-tmpl1 50 100 \;;
#X scalar fd_itpoint-tmpl1 100 50 \;;
#X restore 466 287 pd this1;
#X msg 53 179 bang;
#N canvas 239 475 281 277 this2 1;
#X scalar fd_itpoint-tmpl1 100 10 \;;
#X scalar fd_itpoint-tmpl1 100 50 \;;
#X scalar fd_itpoint-tmpl1 100 80 \;;
#X scalar fd_itpoint-tmpl1 100 100 \;;
#X scalar fd_itpoint-tmpl1 200 100 \;;
#X scalar fd_itpoint-tmpl1 130 20 \;;
#X scalar fd_itpoint-tmpl1 130 240 \;;
#X restore 466 309 pd this2;
#X msg 74 220 symbol pd-this2;
#X text 217 17 "fd_itpoint";
#N canvas 300 42 691 471 stuff 0;
#X obj 34 20 struct fd_itpoint-tmpl1 float x float y;
#X obj 402 371 pointer;
#X obj 168 427 append fd_itpoint-tmpl1 x y;
#X obj 36 56 drawpolygon 0 2 0 0 0 10 10 10 10 0 0 0, f 19;
#X msg 105 202 100 10 \, 100 50 \, 100 80 \, 100 100 \, 200 100 \,
130 20 \, 130 240, f 20;
#X msg 208 350 50 50 \, 50 100 \, 100 50;
#X obj 203 142 t b b;
#X obj 291 60 inlet;
#X msg 363 224 traverse pd-this2 \, bang, f 37;
#X msg 439 295 traverse pd-this1 \, bang;
#X obj 291 85 t b b b;
#X msg 414 140 \; pd-this1 clear \, vis 1 \; pd-this2 clear \, vis
1;
#X obj 338 150 t b b;
#X connect 1 0 2 2;
#X connect 4 0 2 0;
#X connect 5 0 2 0;
#X connect 6 0 4 0;
#X connect 6 1 8 0;
#X connect 7 0 10 0;
#X connect 8 0 1 0;
#X connect 9 0 1 0;
#X connect 10 0 6 0;
#X connect 10 1 12 0;
#X connect 10 2 11 0;
#X connect 12 0 5 0;
#X connect 12 1 9 0;
#X restore 466 261 pd stuff;
#X floatatom 53 332 5 0 0 0 - - -, f 5;
#X text 52 376 Outlet 1: (float) total number of stored pointers;
#X text 51 397 Outlet 2: (pointer) all pointers found \, sequencially
;
#X obj 223 325 pointer;
#X obj 53 281 fd_itpoint pd-this1;
#X text 203 220 <-- (symbol) new scalar name;
#X text 100 178 <-- bang the provided scalar name (as arg1);
#X text 49 77 When you send in a symbol or a bang \, out comes pointers
to all found objects in a scalar through outlet 2 After this \, the
total number of stored pointers is shown out of outlet 1, f 61;
#X text 116 470 Use in conjunction with:;
#X obj 323 469 fd_list-pointer;
#X text 323 495 see fd_list-pointer-help.pd;
#X text 335 288 open to see -->;
#X text 335 308 open to see -->;
#X msg 466 142 bang;
#X text 187 142 bang this first to initialize -->;
#X text 63 437 This is an abstraction identical to [back]'s "flush"
method;
#X connect 2 0 11 0;
#X connect 4 0 11 0;
#X connect 11 0 7 0;
#X connect 11 1 10 0;
#X connect 20 0 6 0;
